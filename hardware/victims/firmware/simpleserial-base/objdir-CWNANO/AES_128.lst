   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"AES_128.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.ExpandKey,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	ExpandKey
  19              		.arch armv6s-m
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  23              		.fpu softvfp
  25              	ExpandKey:
  26              	.LVL0:
  27              	.LFB3:
  28              		.file 1 "AES_128.c"
   1:AES_128.c     **** 
   2:AES_128.c     **** #include "AES_128.h"
   3:AES_128.c     **** 
   4:AES_128.c     **** const unsigned char SBox[256] = {
   5:AES_128.c     ****  0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,   
   6:AES_128.c     ****  0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,   
   7:AES_128.c     ****  0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,   
   8:AES_128.c     ****  0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,   
   9:AES_128.c     ****  0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,   
  10:AES_128.c     ****  0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,   
  11:AES_128.c     ****  0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,   
  12:AES_128.c     ****  0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,   
  13:AES_128.c     ****  0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,   
  14:AES_128.c     ****  0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,   
  15:AES_128.c     ****  0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,   
  16:AES_128.c     ****  0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,  
  17:AES_128.c     ****  0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,   
  18:AES_128.c     ****  0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,   
  19:AES_128.c     ****  0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,   
  20:AES_128.c     ****  0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16 }; 
  21:AES_128.c     **** 
  22:AES_128.c     **** const unsigned char xTime2[256]={
  23:AES_128.c     **** 0x00,0x02,0x04,0x06,0x08,0x0a,0x0c,0x0e,0x10,0x12,0x14,0x16,0x18,0x1a,0x1c,0x1e,
  24:AES_128.c     **** 0x20,0x22,0x24,0x26,0x28,0x2a,0x2c,0x2e,0x30,0x32,0x34,0x36,0x38,0x3a,0x3c,0x3e,
  25:AES_128.c     **** 0x40,0x42,0x44,0x46,0x48,0x4a,0x4c,0x4e,0x50,0x52,0x54,0x56,0x58,0x5a,0x5c,0x5e,
  26:AES_128.c     **** 0x60,0x62,0x64,0x66,0x68,0x6a,0x6c,0x6e,0x70,0x72,0x74,0x76,0x78,0x7a,0x7c,0x7e,
  27:AES_128.c     **** 0x80,0x82,0x84,0x86,0x88,0x8a,0x8c,0x8e,0x90,0x92,0x94,0x96,0x98,0x9a,0x9c,0x9e,
  28:AES_128.c     **** 0xa0,0xa2,0xa4,0xa6,0xa8,0xaa,0xac,0xae,0xb0,0xb2,0xb4,0xb6,0xb8,0xba,0xbc,0xbe,
  29:AES_128.c     **** 0xc0,0xc2,0xc4,0xc6,0xc8,0xca,0xcc,0xce,0xd0,0xd2,0xd4,0xd6,0xd8,0xda,0xdc,0xde,
  30:AES_128.c     **** 0xe0,0xe2,0xe4,0xe6,0xe8,0xea,0xec,0xee,0xf0,0xf2,0xf4,0xf6,0xf8,0xfa,0xfc,0xfe,
  31:AES_128.c     **** 0x1b,0x19,0x1f,0x1d,0x13,0x11,0x17,0x15,0x0b,0x09,0x0f,0x0d,0x03,0x01,0x07,0x05,
  32:AES_128.c     **** 0x3b,0x39,0x3f,0x3d,0x33,0x31,0x37,0x35,0x2b,0x29,0x2f,0x2d,0x23,0x21,0x27,0x25,
  33:AES_128.c     **** 0x5b,0x59,0x5f,0x5d,0x53,0x51,0x57,0x55,0x4b,0x49,0x4f,0x4d,0x43,0x41,0x47,0x45,
  34:AES_128.c     **** 0x7b,0x79,0x7f,0x7d,0x73,0x71,0x77,0x75,0x6b,0x69,0x6f,0x6d,0x63,0x61,0x67,0x65,
  35:AES_128.c     **** 0x9b,0x99,0x9f,0x9d,0x93,0x91,0x97,0x95,0x8b,0x89,0x8f,0x8d,0x83,0x81,0x87,0x85,
  36:AES_128.c     **** 0xbb,0xb9,0xbf,0xbd,0xb3,0xb1,0xb7,0xb5,0xab,0xa9,0xaf,0xad,0xa3,0xa1,0xa7,0xa5,
  37:AES_128.c     **** 0xdb,0xd9,0xdf,0xdd,0xd3,0xd1,0xd7,0xd5,0xcb,0xc9,0xcf,0xcd,0xc3,0xc1,0xc7,0xc5,
  38:AES_128.c     **** 0xfb,0xf9,0xff,0xfd,0xf3,0xf1,0xf7,0xf5,0xeb,0xe9,0xef,0xed,0xe3,0xe1,0xe7,0xe5};
  39:AES_128.c     **** 
  40:AES_128.c     **** 
  41:AES_128.c     **** //Multiplication LUT for 0x03 or {03}
  42:AES_128.c     **** const unsigned char xTime3[256]={
  43:AES_128.c     **** 0x00,0x03,0x06,0x05,0x0c,0x0f,0x0a,0x09,0x18,0x1b,0x1e,0x1d,0x14,0x17,0x12,0x11,
  44:AES_128.c     **** 0x30,0x33,0x36,0x35,0x3c,0x3f,0x3a,0x39,0x28,0x2b,0x2e,0x2d,0x24,0x27,0x22,0x21,
  45:AES_128.c     **** 0x60,0x63,0x66,0x65,0x6c,0x6f,0x6a,0x69,0x78,0x7b,0x7e,0x7d,0x74,0x77,0x72,0x71,
  46:AES_128.c     **** 0x50,0x53,0x56,0x55,0x5c,0x5f,0x5a,0x59,0x48,0x4b,0x4e,0x4d,0x44,0x47,0x42,0x41,
  47:AES_128.c     **** 0xc0,0xc3,0xc6,0xc5,0xcc,0xcf,0xca,0xc9,0xd8,0xdb,0xde,0xdd,0xd4,0xd7,0xd2,0xd1,
  48:AES_128.c     **** 0xf0,0xf3,0xf6,0xf5,0xfc,0xff,0xfa,0xf9,0xe8,0xeb,0xee,0xed,0xe4,0xe7,0xe2,0xe1,
  49:AES_128.c     **** 0xa0,0xa3,0xa6,0xa5,0xac,0xaf,0xaa,0xa9,0xb8,0xbb,0xbe,0xbd,0xb4,0xb7,0xb2,0xb1,
  50:AES_128.c     **** 0x90,0x93,0x96,0x95,0x9c,0x9f,0x9a,0x99,0x88,0x8b,0x8e,0x8d,0x84,0x87,0x82,0x81,
  51:AES_128.c     **** 0x9b,0x98,0x9d,0x9e,0x97,0x94,0x91,0x92,0x83,0x80,0x85,0x86,0x8f,0x8c,0x89,0x8a,
  52:AES_128.c     **** 0xab,0xa8,0xad,0xae,0xa7,0xa4,0xa1,0xa2,0xb3,0xb0,0xb5,0xb6,0xbf,0xbc,0xb9,0xba,
  53:AES_128.c     **** 0xfb,0xf8,0xfd,0xfe,0xf7,0xf4,0xf1,0xf2,0xe3,0xe0,0xe5,0xe6,0xef,0xec,0xe9,0xea,
  54:AES_128.c     **** 0xcb,0xc8,0xcd,0xce,0xc7,0xc4,0xc1,0xc2,0xd3,0xd0,0xd5,0xd6,0xdf,0xdc,0xd9,0xda,
  55:AES_128.c     **** 0x5b,0x58,0x5d,0x5e,0x57,0x54,0x51,0x52,0x43,0x40,0x45,0x46,0x4f,0x4c,0x49,0x4a,
  56:AES_128.c     **** 0x6b,0x68,0x6d,0x6e,0x67,0x64,0x61,0x62,0x73,0x70,0x75,0x76,0x7f,0x7c,0x79,0x7a,
  57:AES_128.c     **** 0x3b,0x38,0x3d,0x3e,0x37,0x34,0x31,0x32,0x23,0x20,0x25,0x26,0x2f,0x2c,0x29,0x2a,
  58:AES_128.c     **** 0x0b,0x08,0x0d,0x0e,0x07,0x04,0x01,0x02,0x13,0x10,0x15,0x16,0x1f,0x1c,0x19,0x1a};
  59:AES_128.c     **** 
  60:AES_128.c     **** const unsigned char RCon[10] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36};
  61:AES_128.c     **** 
  62:AES_128.c     **** #define xTime(x) ((x<<1) ^ ((x & 0x080) ? 0x1b : 0x00))
  63:AES_128.c     **** 
  64:AES_128.c     **** 
  65:AES_128.c     **** /**********************************************************************
  66:AES_128.c     ****  * Functions for key expansion
  67:AES_128.c     ****  *********************************************************************/
  68:AES_128.c     **** void ExpandKey (unsigned char Key[][4], unsigned char Expanded_key[][4][4])
  69:AES_128.c     **** {
  29              		.loc 1 69 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  70:AES_128.c     **** 	unsigned char TempKey[4][4];
  33              		.loc 1 70 2 view .LVU1
  71:AES_128.c     **** 	bzero(TempKey, 4*4*sizeof (unsigned char));
  34              		.loc 1 71 2 view .LVU2
  72:AES_128.c     **** 	unsigned char Tmp_key_column[4];
  35              		.loc 1 72 2 view .LVU3
  73:AES_128.c     **** 	bzero(Tmp_key_column, 4*sizeof (unsigned char));
  36              		.loc 1 73 2 view .LVU4
  74:AES_128.c     **** 	int i,j;
  37              		.loc 1 74 2 view .LVU5
  75:AES_128.c     **** 
  76:AES_128.c     **** 	// Encryption Key copied to Expanded Key [0]
  77:AES_128.c     **** 	memcpy(Expanded_key[0], Key, 4 * 4 * sizeof(unsigned char));
  38              		.loc 1 77 2 view .LVU6
  69:AES_128.c     **** 	unsigned char TempKey[4][4];
  39              		.loc 1 69 1 is_stmt 0 view .LVU7
  40 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 20
  43              		.cfi_offset 4, -20
  44              		.cfi_offset 5, -16
  45              		.cfi_offset 6, -12
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 DE46     		mov	lr, fp
  49 0004 5746     		mov	r7, r10
  50 0006 4E46     		mov	r6, r9
  51 0008 4546     		mov	r5, r8
  52 000a 0C00     		movs	r4, r1
  53 000c E0B5     		push	{r5, r6, r7, lr}
  54              	.LCFI1:
  55              		.cfi_def_cfa_offset 36
  56              		.cfi_offset 8, -36
  57              		.cfi_offset 9, -32
  58              		.cfi_offset 10, -28
  59              		.cfi_offset 11, -24
  60              		.loc 1 77 2 view .LVU8
  61 000e 0100     		movs	r1, r0
  62              	.LVL1:
  69:AES_128.c     **** 	unsigned char TempKey[4][4];
  63              		.loc 1 69 1 view .LVU9
  64 0010 8BB0     		sub	sp, sp, #44
  65              	.LCFI2:
  66              		.cfi_def_cfa_offset 80
  67              		.loc 1 77 2 view .LVU10
  68 0012 1022     		movs	r2, #16
  69 0014 2000     		movs	r0, r4
  70              	.LVL2:
  71              		.loc 1 77 2 view .LVU11
  72 0016 FFF7FEFF 		bl	memcpy
  73              	.LVL3:
  78:AES_128.c     **** 
  79:AES_128.c     **** 	for (i=1; i<11; i++){
  74              		.loc 1 79 2 is_stmt 1 view .LVU12
  75              		.loc 1 79 12 view .LVU13
  76 001a A37B     		ldrb	r3, [r4, #14]
  77 001c 2278     		ldrb	r2, [r4]
  78 001e 9B46     		mov	fp, r3
  79 0020 A37A     		ldrb	r3, [r4, #10]
  80 0022 E77B     		ldrb	r7, [r4, #15]
  81 0024 9A46     		mov	r10, r3
  82 0026 A379     		ldrb	r3, [r4, #6]
  83 0028 E67A     		ldrb	r6, [r4, #11]
  84 002a 9946     		mov	r9, r3
  85 002c A378     		ldrb	r3, [r4, #2]
  86 002e E579     		ldrb	r5, [r4, #7]
  87 0030 9846     		mov	r8, r3
  88 0032 637B     		ldrb	r3, [r4, #13]
  89 0034 3D49     		ldr	r1, .L5
  90 0036 0593     		str	r3, [sp, #20]
  91 0038 637A     		ldrb	r3, [r4, #9]
  92 003a 3D48     		ldr	r0, .L5+4
  93 003c 0493     		str	r3, [sp, #16]
  94 003e 6379     		ldrb	r3, [r4, #5]
  95 0040 0991     		str	r1, [sp, #36]
  96 0042 0393     		str	r3, [sp, #12]
  97 0044 6378     		ldrb	r3, [r4, #1]
  98 0046 0793     		str	r3, [sp, #28]
  99 0048 237B     		ldrb	r3, [r4, #12]
 100 004a 0693     		str	r3, [sp, #24]
 101 004c 237A     		ldrb	r3, [r4, #8]
 102 004e 0293     		str	r3, [sp, #8]
 103 0050 2379     		ldrb	r3, [r4, #4]
 104 0052 0193     		str	r3, [sp, #4]
 105 0054 E378     		ldrb	r3, [r4, #3]
 106 0056 9C46     		mov	ip, r3
 107 0058 2300     		movs	r3, r4
 108 005a 6446     		mov	r4, ip
 109              	.LVL4:
 110              		.loc 1 79 12 is_stmt 0 view .LVU14
 111 005c 1033     		adds	r3, r3, #16
 112              	.LVL5:
 113              		.loc 1 79 12 view .LVU15
 114 005e 0894     		str	r4, [sp, #32]
 115              	.LVL6:
 116              	.L2:
  80:AES_128.c     **** 		// W3 copied to TempKeyRow with rotation
  81:AES_128.c     **** 		Tmp_key_column[0]=Expanded_key[i-1][1][3];
 117              		.loc 1 81 3 is_stmt 1 view .LVU16
  82:AES_128.c     **** 		Tmp_key_column[1]=Expanded_key[i-1][2][3];
 118              		.loc 1 82 3 view .LVU17
  83:AES_128.c     **** 		Tmp_key_column[2]=Expanded_key[i-1][3][3];
 119              		.loc 1 83 3 view .LVU18
  84:AES_128.c     **** 		Tmp_key_column[3]=Expanded_key[i-1][0][3];
 120              		.loc 1 84 3 view .LVU19
  85:AES_128.c     **** 
  86:AES_128.c     **** 		// sBox applied
  87:AES_128.c     **** 		Tmp_key_column[0]=SBox[ Tmp_key_column[0] ];
 121              		.loc 1 87 3 view .LVU20
  88:AES_128.c     **** 		Tmp_key_column[1]=SBox[ Tmp_key_column[1] ];
 122              		.loc 1 88 3 view .LVU21
  89:AES_128.c     **** 		Tmp_key_column[2]=SBox[ Tmp_key_column[2] ];
 123              		.loc 1 89 3 view .LVU22
  90:AES_128.c     **** 		Tmp_key_column[3]=SBox[ Tmp_key_column[3] ];
 124              		.loc 1 90 3 view .LVU23
  91:AES_128.c     **** 
  92:AES_128.c     **** 		// Rcon applied
  93:AES_128.c     **** 		Tmp_key_column[0]^=RCon[i-1];
 125              		.loc 1 93 3 view .LVU24
  94:AES_128.c     **** 
  95:AES_128.c     **** 		// XOR
  96:AES_128.c     **** 		for(j=0; j<4; j++){
 126              		.loc 1 96 3 view .LVU25
 127              		.loc 1 96 12 view .LVU26
  97:AES_128.c     **** 			Tmp_key_column[0] = Tmp_key_column[0]^Expanded_key[i-1][0][j];
 128              		.loc 1 97 4 view .LVU27
 129              		.loc 1 97 22 is_stmt 0 view .LVU28
 130 0060 099C     		ldr	r4, [sp, #36]
 131 0062 2178     		ldrb	r1, [r4]
 132 0064 4A40     		eors	r2, r1
 133 0066 415D     		ldrb	r1, [r0, r5]
 134 0068 4A40     		eors	r2, r1
  98:AES_128.c     **** 			Tmp_key_column[1] = Tmp_key_column[1]^Expanded_key[i-1][1][j];
 135              		.loc 1 98 4 is_stmt 1 view .LVU29
  99:AES_128.c     **** 			Tmp_key_column[2] = Tmp_key_column[2]^Expanded_key[i-1][2][j];
 136              		.loc 1 99 4 view .LVU30
 100:AES_128.c     **** 			Tmp_key_column[3] = Tmp_key_column[3]^Expanded_key[i-1][3][j];
 137              		.loc 1 100 4 view .LVU31
 101:AES_128.c     **** 
 102:AES_128.c     **** 			Expanded_key[i][0][j] = Tmp_key_column[0];
 138              		.loc 1 102 4 view .LVU32
  98:AES_128.c     **** 			Tmp_key_column[2] = Tmp_key_column[2]^Expanded_key[i-1][2][j];
 139              		.loc 1 98 22 is_stmt 0 view .LVU33
 140 006a 815D     		ldrb	r1, [r0, r6]
 141              		.loc 1 102 26 view .LVU34
 142 006c 1A70     		strb	r2, [r3]
 103:AES_128.c     **** 			Expanded_key[i][1][j] = Tmp_key_column[1];
 143              		.loc 1 103 4 is_stmt 1 view .LVU35
  98:AES_128.c     **** 			Tmp_key_column[2] = Tmp_key_column[2]^Expanded_key[i-1][2][j];
 144              		.loc 1 98 22 is_stmt 0 view .LVU36
 145 006e 8C46     		mov	ip, r1
 146 0070 6446     		mov	r4, ip
 147 0072 0199     		ldr	r1, [sp, #4]
 148 0074 6140     		eors	r1, r4
 149 0076 0191     		str	r1, [sp, #4]
  99:AES_128.c     **** 			Tmp_key_column[3] = Tmp_key_column[3]^Expanded_key[i-1][3][j];
 150              		.loc 1 99 22 view .LVU37
 151 0078 C45D     		ldrb	r4, [r0, r7]
 152 007a 0299     		ldr	r1, [sp, #8]
 153 007c 6140     		eors	r1, r4
 100:AES_128.c     **** 
 154              		.loc 1 100 22 view .LVU38
 155 007e 089C     		ldr	r4, [sp, #32]
  99:AES_128.c     **** 			Tmp_key_column[3] = Tmp_key_column[3]^Expanded_key[i-1][3][j];
 156              		.loc 1 99 22 view .LVU39
 157 0080 0291     		str	r1, [sp, #8]
 100:AES_128.c     **** 
 158              		.loc 1 100 22 view .LVU40
 159 0082 045D     		ldrb	r4, [r0, r4]
 160 0084 0699     		ldr	r1, [sp, #24]
 161 0086 6140     		eors	r1, r4
 162 0088 0C00     		movs	r4, r1
 163              		.loc 1 103 26 view .LVU41
 164 008a 0199     		ldr	r1, [sp, #4]
 104:AES_128.c     **** 			Expanded_key[i][2][j] = Tmp_key_column[2];
 105:AES_128.c     **** 			Expanded_key[i][3][j] = Tmp_key_column[3];
 165              		.loc 1 105 26 view .LVU42
 166 008c 0694     		str	r4, [sp, #24]
 103:AES_128.c     **** 			Expanded_key[i][2][j] = Tmp_key_column[2];
 167              		.loc 1 103 26 view .LVU43
 168 008e 1971     		strb	r1, [r3, #4]
 104:AES_128.c     **** 			Expanded_key[i][2][j] = Tmp_key_column[2];
 169              		.loc 1 104 4 is_stmt 1 view .LVU44
 104:AES_128.c     **** 			Expanded_key[i][2][j] = Tmp_key_column[2];
 170              		.loc 1 104 26 is_stmt 0 view .LVU45
 171 0090 0299     		ldr	r1, [sp, #8]
 172              		.loc 1 105 26 view .LVU46
 173 0092 1C73     		strb	r4, [r3, #12]
 104:AES_128.c     **** 			Expanded_key[i][2][j] = Tmp_key_column[2];
 174              		.loc 1 104 26 view .LVU47
 175 0094 1972     		strb	r1, [r3, #8]
 176              		.loc 1 105 4 is_stmt 1 view .LVU48
  96:AES_128.c     **** 			Tmp_key_column[0] = Tmp_key_column[0]^Expanded_key[i-1][0][j];
 177              		.loc 1 96 17 view .LVU49
 178              	.LVL7:
  96:AES_128.c     **** 			Tmp_key_column[0] = Tmp_key_column[0]^Expanded_key[i-1][0][j];
 179              		.loc 1 96 12 view .LVU50
  97:AES_128.c     **** 			Tmp_key_column[1] = Tmp_key_column[1]^Expanded_key[i-1][1][j];
 180              		.loc 1 97 4 view .LVU51
  98:AES_128.c     **** 			Tmp_key_column[2] = Tmp_key_column[2]^Expanded_key[i-1][2][j];
 181              		.loc 1 98 4 view .LVU52
  99:AES_128.c     **** 			Tmp_key_column[3] = Tmp_key_column[3]^Expanded_key[i-1][3][j];
 182              		.loc 1 99 4 view .LVU53
 100:AES_128.c     **** 
 183              		.loc 1 100 4 view .LVU54
 102:AES_128.c     **** 			Expanded_key[i][1][j] = Tmp_key_column[1];
 184              		.loc 1 102 4 view .LVU55
  97:AES_128.c     **** 			Tmp_key_column[1] = Tmp_key_column[1]^Expanded_key[i-1][1][j];
 185              		.loc 1 97 22 is_stmt 0 view .LVU56
 186 0096 0799     		ldr	r1, [sp, #28]
  98:AES_128.c     **** 			Tmp_key_column[2] = Tmp_key_column[2]^Expanded_key[i-1][2][j];
 187              		.loc 1 98 22 view .LVU57
 188 0098 039C     		ldr	r4, [sp, #12]
  97:AES_128.c     **** 			Tmp_key_column[1] = Tmp_key_column[1]^Expanded_key[i-1][1][j];
 189              		.loc 1 97 22 view .LVU58
 190 009a 5140     		eors	r1, r2
 191 009c 0791     		str	r1, [sp, #28]
  98:AES_128.c     **** 			Tmp_key_column[2] = Tmp_key_column[2]^Expanded_key[i-1][2][j];
 192              		.loc 1 98 22 view .LVU59
 193 009e 0199     		ldr	r1, [sp, #4]
 194 00a0 4C40     		eors	r4, r1
 195 00a2 0394     		str	r4, [sp, #12]
  99:AES_128.c     **** 			Tmp_key_column[3] = Tmp_key_column[3]^Expanded_key[i-1][3][j];
 196              		.loc 1 99 22 view .LVU60
 197 00a4 0299     		ldr	r1, [sp, #8]
 198 00a6 049C     		ldr	r4, [sp, #16]
 199 00a8 4C40     		eors	r4, r1
 200 00aa 0494     		str	r4, [sp, #16]
 100:AES_128.c     **** 
 201              		.loc 1 100 22 view .LVU61
 202 00ac 0699     		ldr	r1, [sp, #24]
 203 00ae 059C     		ldr	r4, [sp, #20]
 204 00b0 4C40     		eors	r4, r1
 102:AES_128.c     **** 			Expanded_key[i][1][j] = Tmp_key_column[1];
 205              		.loc 1 102 26 view .LVU62
 206 00b2 0799     		ldr	r1, [sp, #28]
 100:AES_128.c     **** 
 207              		.loc 1 100 22 view .LVU63
 208 00b4 0594     		str	r4, [sp, #20]
 102:AES_128.c     **** 			Expanded_key[i][1][j] = Tmp_key_column[1];
 209              		.loc 1 102 26 view .LVU64
 210 00b6 5970     		strb	r1, [r3, #1]
 103:AES_128.c     **** 			Expanded_key[i][2][j] = Tmp_key_column[2];
 211              		.loc 1 103 4 is_stmt 1 view .LVU65
 103:AES_128.c     **** 			Expanded_key[i][2][j] = Tmp_key_column[2];
 212              		.loc 1 103 26 is_stmt 0 view .LVU66
 213 00b8 039C     		ldr	r4, [sp, #12]
 214 00ba 5C71     		strb	r4, [r3, #5]
 104:AES_128.c     **** 			Expanded_key[i][3][j] = Tmp_key_column[3];
 215              		.loc 1 104 4 is_stmt 1 view .LVU67
 104:AES_128.c     **** 			Expanded_key[i][3][j] = Tmp_key_column[3];
 216              		.loc 1 104 26 is_stmt 0 view .LVU68
 217 00bc 049C     		ldr	r4, [sp, #16]
 218 00be 5C72     		strb	r4, [r3, #9]
 219              		.loc 1 105 4 is_stmt 1 view .LVU69
 220              		.loc 1 105 26 is_stmt 0 view .LVU70
 221 00c0 059C     		ldr	r4, [sp, #20]
 222 00c2 5C73     		strb	r4, [r3, #13]
  96:AES_128.c     **** 			Tmp_key_column[0] = Tmp_key_column[0]^Expanded_key[i-1][0][j];
 223              		.loc 1 96 17 is_stmt 1 view .LVU71
 224              	.LVL8:
  96:AES_128.c     **** 			Tmp_key_column[0] = Tmp_key_column[0]^Expanded_key[i-1][0][j];
 225              		.loc 1 96 12 view .LVU72
  97:AES_128.c     **** 			Tmp_key_column[1] = Tmp_key_column[1]^Expanded_key[i-1][1][j];
 226              		.loc 1 97 4 view .LVU73
  97:AES_128.c     **** 			Tmp_key_column[1] = Tmp_key_column[1]^Expanded_key[i-1][1][j];
 227              		.loc 1 97 22 is_stmt 0 view .LVU74
 228 00c4 4446     		mov	r4, r8
 229 00c6 4C40     		eors	r4, r1
  98:AES_128.c     **** 			Tmp_key_column[2] = Tmp_key_column[2]^Expanded_key[i-1][2][j];
 230              		.loc 1 98 22 view .LVU75
 231 00c8 4946     		mov	r1, r9
  97:AES_128.c     **** 			Tmp_key_column[1] = Tmp_key_column[1]^Expanded_key[i-1][1][j];
 232              		.loc 1 97 22 view .LVU76
 233 00ca A046     		mov	r8, r4
  98:AES_128.c     **** 			Tmp_key_column[2] = Tmp_key_column[2]^Expanded_key[i-1][2][j];
 234              		.loc 1 98 4 is_stmt 1 view .LVU77
  98:AES_128.c     **** 			Tmp_key_column[2] = Tmp_key_column[2]^Expanded_key[i-1][2][j];
 235              		.loc 1 98 22 is_stmt 0 view .LVU78
 236 00cc 039C     		ldr	r4, [sp, #12]
 237 00ce 6140     		eors	r1, r4
 238 00d0 8946     		mov	r9, r1
  99:AES_128.c     **** 			Tmp_key_column[3] = Tmp_key_column[3]^Expanded_key[i-1][3][j];
 239              		.loc 1 99 4 is_stmt 1 view .LVU79
  99:AES_128.c     **** 			Tmp_key_column[3] = Tmp_key_column[3]^Expanded_key[i-1][3][j];
 240              		.loc 1 99 22 is_stmt 0 view .LVU80
 241 00d2 5146     		mov	r1, r10
 242 00d4 049C     		ldr	r4, [sp, #16]
 243 00d6 6140     		eors	r1, r4
 244 00d8 8A46     		mov	r10, r1
 100:AES_128.c     **** 
 245              		.loc 1 100 4 is_stmt 1 view .LVU81
 100:AES_128.c     **** 
 246              		.loc 1 100 22 is_stmt 0 view .LVU82
 247 00da 5946     		mov	r1, fp
 248 00dc 059C     		ldr	r4, [sp, #20]
 249 00de 6140     		eors	r1, r4
 250 00e0 8B46     		mov	fp, r1
 102:AES_128.c     **** 			Expanded_key[i][1][j] = Tmp_key_column[1];
 251              		.loc 1 102 4 is_stmt 1 view .LVU83
 102:AES_128.c     **** 			Expanded_key[i][1][j] = Tmp_key_column[1];
 252              		.loc 1 102 26 is_stmt 0 view .LVU84
 253 00e2 4146     		mov	r1, r8
 254 00e4 9970     		strb	r1, [r3, #2]
 103:AES_128.c     **** 			Expanded_key[i][2][j] = Tmp_key_column[2];
 255              		.loc 1 103 4 is_stmt 1 view .LVU85
 103:AES_128.c     **** 			Expanded_key[i][2][j] = Tmp_key_column[2];
 256              		.loc 1 103 26 is_stmt 0 view .LVU86
 257 00e6 4946     		mov	r1, r9
 258 00e8 9971     		strb	r1, [r3, #6]
 104:AES_128.c     **** 			Expanded_key[i][3][j] = Tmp_key_column[3];
 259              		.loc 1 104 4 is_stmt 1 view .LVU87
 104:AES_128.c     **** 			Expanded_key[i][3][j] = Tmp_key_column[3];
 260              		.loc 1 104 26 is_stmt 0 view .LVU88
 261 00ea 5146     		mov	r1, r10
 262 00ec 9972     		strb	r1, [r3, #10]
 263              		.loc 1 105 4 is_stmt 1 view .LVU89
 264              		.loc 1 105 26 is_stmt 0 view .LVU90
 265 00ee 5946     		mov	r1, fp
 266 00f0 9973     		strb	r1, [r3, #14]
  96:AES_128.c     **** 			Tmp_key_column[0] = Tmp_key_column[0]^Expanded_key[i-1][0][j];
 267              		.loc 1 96 17 is_stmt 1 view .LVU91
 268              	.LVL9:
  96:AES_128.c     **** 			Tmp_key_column[0] = Tmp_key_column[0]^Expanded_key[i-1][0][j];
 269              		.loc 1 96 12 view .LVU92
  97:AES_128.c     **** 			Tmp_key_column[1] = Tmp_key_column[1]^Expanded_key[i-1][1][j];
 270              		.loc 1 97 4 view .LVU93
  97:AES_128.c     **** 			Tmp_key_column[1] = Tmp_key_column[1]^Expanded_key[i-1][1][j];
 271              		.loc 1 97 22 is_stmt 0 view .LVU94
 272 00f2 4146     		mov	r1, r8
 273 00f4 089C     		ldr	r4, [sp, #32]
 274 00f6 4C40     		eors	r4, r1
  98:AES_128.c     **** 			Tmp_key_column[2] = Tmp_key_column[2]^Expanded_key[i-1][2][j];
 275              		.loc 1 98 22 view .LVU95
 276 00f8 4946     		mov	r1, r9
 277 00fa 4D40     		eors	r5, r1
  99:AES_128.c     **** 			Tmp_key_column[3] = Tmp_key_column[3]^Expanded_key[i-1][3][j];
 278              		.loc 1 99 22 view .LVU96
 279 00fc 5146     		mov	r1, r10
 280 00fe 4E40     		eors	r6, r1
 100:AES_128.c     **** 
 281              		.loc 1 100 22 view .LVU97
 282 0100 5946     		mov	r1, fp
 102:AES_128.c     **** 			Expanded_key[i][1][j] = Tmp_key_column[1];
 283              		.loc 1 102 26 view .LVU98
 284 0102 DC70     		strb	r4, [r3, #3]
  97:AES_128.c     **** 			Tmp_key_column[1] = Tmp_key_column[1]^Expanded_key[i-1][1][j];
 285              		.loc 1 97 22 view .LVU99
 286 0104 0894     		str	r4, [sp, #32]
  98:AES_128.c     **** 			Tmp_key_column[2] = Tmp_key_column[2]^Expanded_key[i-1][2][j];
 287              		.loc 1 98 4 is_stmt 1 view .LVU100
  99:AES_128.c     **** 			Tmp_key_column[3] = Tmp_key_column[3]^Expanded_key[i-1][3][j];
 288              		.loc 1 99 4 view .LVU101
 100:AES_128.c     **** 
 289              		.loc 1 100 4 view .LVU102
  79:AES_128.c     **** 		// W3 copied to TempKeyRow with rotation
 290              		.loc 1 79 2 is_stmt 0 view .LVU103
 291 0106 099C     		ldr	r4, [sp, #36]
 100:AES_128.c     **** 
 292              		.loc 1 100 22 view .LVU104
 293 0108 4F40     		eors	r7, r1
 102:AES_128.c     **** 			Expanded_key[i][1][j] = Tmp_key_column[1];
 294              		.loc 1 102 4 is_stmt 1 view .LVU105
 103:AES_128.c     **** 			Expanded_key[i][2][j] = Tmp_key_column[2];
 295              		.loc 1 103 4 view .LVU106
  79:AES_128.c     **** 		// W3 copied to TempKeyRow with rotation
 296              		.loc 1 79 2 is_stmt 0 view .LVU107
 297 010a 0A49     		ldr	r1, .L5+8
 298 010c 0134     		adds	r4, r4, #1
 103:AES_128.c     **** 			Expanded_key[i][2][j] = Tmp_key_column[2];
 299              		.loc 1 103 26 view .LVU108
 300 010e DD71     		strb	r5, [r3, #7]
 104:AES_128.c     **** 			Expanded_key[i][3][j] = Tmp_key_column[3];
 301              		.loc 1 104 4 is_stmt 1 view .LVU109
 104:AES_128.c     **** 			Expanded_key[i][3][j] = Tmp_key_column[3];
 302              		.loc 1 104 26 is_stmt 0 view .LVU110
 303 0110 DE72     		strb	r6, [r3, #11]
 304              		.loc 1 105 4 is_stmt 1 view .LVU111
 305              		.loc 1 105 26 is_stmt 0 view .LVU112
 306 0112 DF73     		strb	r7, [r3, #15]
  96:AES_128.c     **** 			Tmp_key_column[0] = Tmp_key_column[0]^Expanded_key[i-1][0][j];
 307              		.loc 1 96 17 is_stmt 1 view .LVU113
 308              	.LVL10:
  96:AES_128.c     **** 			Tmp_key_column[0] = Tmp_key_column[0]^Expanded_key[i-1][0][j];
 309              		.loc 1 96 12 view .LVU114
  79:AES_128.c     **** 		// W3 copied to TempKeyRow with rotation
 310              		.loc 1 79 18 view .LVU115
  79:AES_128.c     **** 		// W3 copied to TempKeyRow with rotation
 311              		.loc 1 79 12 view .LVU116
  79:AES_128.c     **** 		// W3 copied to TempKeyRow with rotation
 312              		.loc 1 79 2 is_stmt 0 view .LVU117
 313 0114 0994     		str	r4, [sp, #36]
 314              	.LVL11:
  79:AES_128.c     **** 		// W3 copied to TempKeyRow with rotation
 315              		.loc 1 79 2 view .LVU118
 316 0116 1033     		adds	r3, r3, #16
 317 0118 8C42     		cmp	r4, r1
 318 011a A1D1     		bne	.L2
 106:AES_128.c     **** 		}
 107:AES_128.c     **** 	}
 108:AES_128.c     **** }
 319              		.loc 1 108 1 view .LVU119
 320 011c 0BB0     		add	sp, sp, #44
 321              		@ sp needed
 322              	.LVL12:
 323              		.loc 1 108 1 view .LVU120
 324 011e F0BC     		pop	{r4, r5, r6, r7}
 325 0120 BB46     		mov	fp, r7
 326 0122 B246     		mov	r10, r6
 327 0124 A946     		mov	r9, r5
 328 0126 A046     		mov	r8, r4
 329 0128 F0BD     		pop	{r4, r5, r6, r7, pc}
 330              	.L6:
 331 012a C046     		.align	2
 332              	.L5:
 333 012c 00000000 		.word	.LANCHOR0
 334 0130 00000000 		.word	SBox
 335 0134 0A000000 		.word	.LANCHOR0+10
 336              		.cfi_endproc
 337              	.LFE3:
 339              		.section	.text.AddRoundKey,"ax",%progbits
 340              		.align	1
 341              		.p2align 2,,3
 342              		.global	AddRoundKey
 343              		.syntax unified
 344              		.code	16
 345              		.thumb_func
 346              		.fpu softvfp
 348              	AddRoundKey:
 349              	.LVL13:
 350              	.LFB4:
 109:AES_128.c     **** 
 110:AES_128.c     **** void AddRoundKey (unsigned char Key[][4], unsigned char StateArray[][4])
 111:AES_128.c     **** {
 351              		.loc 1 111 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 112:AES_128.c     **** 	int i,j;
 356              		.loc 1 112 2 view .LVU122
 113:AES_128.c     **** 	for(i=0; i<4; i++)
 357              		.loc 1 113 2 view .LVU123
 358              		.loc 1 113 11 view .LVU124
 114:AES_128.c     **** 		for(j=0; j<4; j++)
 359              		.loc 1 114 12 view .LVU125
 115:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 360              		.loc 1 115 4 view .LVU126
 361              		.loc 1 115 21 is_stmt 0 view .LVU127
 362 0000 0378     		ldrb	r3, [r0]
 363 0002 0A78     		ldrb	r2, [r1]
 116:AES_128.c     **** }
 364              		.loc 1 116 1 view .LVU128
 365              		@ sp needed
 115:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 366              		.loc 1 115 21 view .LVU129
 367 0004 5340     		eors	r3, r2
 368 0006 0B70     		strb	r3, [r1]
 114:AES_128.c     **** 		for(j=0; j<4; j++)
 369              		.loc 1 114 17 is_stmt 1 view .LVU130
 370              	.LVL14:
 114:AES_128.c     **** 		for(j=0; j<4; j++)
 371              		.loc 1 114 12 view .LVU131
 115:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 372              		.loc 1 115 4 view .LVU132
 115:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 373              		.loc 1 115 21 is_stmt 0 view .LVU133
 374 0008 4378     		ldrb	r3, [r0, #1]
 375 000a 4A78     		ldrb	r2, [r1, #1]
 376 000c 5340     		eors	r3, r2
 377 000e 4B70     		strb	r3, [r1, #1]
 114:AES_128.c     **** 		for(j=0; j<4; j++)
 378              		.loc 1 114 17 is_stmt 1 view .LVU134
 379              	.LVL15:
 114:AES_128.c     **** 		for(j=0; j<4; j++)
 380              		.loc 1 114 12 view .LVU135
 115:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 381              		.loc 1 115 4 view .LVU136
 115:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 382              		.loc 1 115 21 is_stmt 0 view .LVU137
 383 0010 8378     		ldrb	r3, [r0, #2]
 384 0012 8A78     		ldrb	r2, [r1, #2]
 385 0014 5340     		eors	r3, r2
 386 0016 8B70     		strb	r3, [r1, #2]
 114:AES_128.c     **** 		for(j=0; j<4; j++)
 387              		.loc 1 114 17 is_stmt 1 view .LVU138
 388              	.LVL16:
 114:AES_128.c     **** 		for(j=0; j<4; j++)
 389              		.loc 1 114 12 view .LVU139
 115:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 390              		.loc 1 115 4 view .LVU140
 115:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 391              		.loc 1 115 21 is_stmt 0 view .LVU141
 392 0018 C278     		ldrb	r2, [r0, #3]
 393 001a CB78     		ldrb	r3, [r1, #3]
 394 001c 5340     		eors	r3, r2
 395 001e CB70     		strb	r3, [r1, #3]
 114:AES_128.c     **** 		for(j=0; j<4; j++)
 396              		.loc 1 114 17 is_stmt 1 view .LVU142
 397              	.LVL17:
 114:AES_128.c     **** 		for(j=0; j<4; j++)
 398              		.loc 1 114 12 view .LVU143
 113:AES_128.c     **** 		for(j=0; j<4; j++)
 399              		.loc 1 113 16 view .LVU144
 113:AES_128.c     **** 		for(j=0; j<4; j++)
 400              		.loc 1 113 11 view .LVU145
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 401              		.loc 1 114 12 view .LVU146
 115:AES_128.c     **** }
 402              		.loc 1 115 4 view .LVU147
 115:AES_128.c     **** }
 403              		.loc 1 115 21 is_stmt 0 view .LVU148
 404 0020 0279     		ldrb	r2, [r0, #4]
 405 0022 0B79     		ldrb	r3, [r1, #4]
 406 0024 5340     		eors	r3, r2
 407 0026 0B71     		strb	r3, [r1, #4]
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 408              		.loc 1 114 17 is_stmt 1 view .LVU149
 409              	.LVL18:
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 410              		.loc 1 114 12 view .LVU150
 115:AES_128.c     **** }
 411              		.loc 1 115 4 view .LVU151
 115:AES_128.c     **** }
 412              		.loc 1 115 21 is_stmt 0 view .LVU152
 413 0028 4279     		ldrb	r2, [r0, #5]
 414 002a 4B79     		ldrb	r3, [r1, #5]
 415 002c 5340     		eors	r3, r2
 416 002e 4B71     		strb	r3, [r1, #5]
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 417              		.loc 1 114 17 is_stmt 1 view .LVU153
 418              	.LVL19:
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 419              		.loc 1 114 12 view .LVU154
 115:AES_128.c     **** }
 420              		.loc 1 115 4 view .LVU155
 115:AES_128.c     **** }
 421              		.loc 1 115 21 is_stmt 0 view .LVU156
 422 0030 8279     		ldrb	r2, [r0, #6]
 423 0032 8B79     		ldrb	r3, [r1, #6]
 424 0034 5340     		eors	r3, r2
 425 0036 8B71     		strb	r3, [r1, #6]
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 426              		.loc 1 114 17 is_stmt 1 view .LVU157
 427              	.LVL20:
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 428              		.loc 1 114 12 view .LVU158
 115:AES_128.c     **** }
 429              		.loc 1 115 4 view .LVU159
 115:AES_128.c     **** }
 430              		.loc 1 115 21 is_stmt 0 view .LVU160
 431 0038 C279     		ldrb	r2, [r0, #7]
 432 003a CB79     		ldrb	r3, [r1, #7]
 433 003c 5340     		eors	r3, r2
 434 003e CB71     		strb	r3, [r1, #7]
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 435              		.loc 1 114 17 is_stmt 1 view .LVU161
 436              	.LVL21:
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 437              		.loc 1 114 12 view .LVU162
 113:AES_128.c     **** 		for(j=0; j<4; j++)
 438              		.loc 1 113 16 view .LVU163
 113:AES_128.c     **** 		for(j=0; j<4; j++)
 439              		.loc 1 113 11 view .LVU164
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 440              		.loc 1 114 12 view .LVU165
 115:AES_128.c     **** }
 441              		.loc 1 115 4 view .LVU166
 115:AES_128.c     **** }
 442              		.loc 1 115 21 is_stmt 0 view .LVU167
 443 0040 027A     		ldrb	r2, [r0, #8]
 444 0042 0B7A     		ldrb	r3, [r1, #8]
 445 0044 5340     		eors	r3, r2
 446 0046 0B72     		strb	r3, [r1, #8]
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 447              		.loc 1 114 17 is_stmt 1 view .LVU168
 448              	.LVL22:
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 449              		.loc 1 114 12 view .LVU169
 115:AES_128.c     **** }
 450              		.loc 1 115 4 view .LVU170
 115:AES_128.c     **** }
 451              		.loc 1 115 21 is_stmt 0 view .LVU171
 452 0048 427A     		ldrb	r2, [r0, #9]
 453 004a 4B7A     		ldrb	r3, [r1, #9]
 454 004c 5340     		eors	r3, r2
 455 004e 4B72     		strb	r3, [r1, #9]
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 456              		.loc 1 114 17 is_stmt 1 view .LVU172
 457              	.LVL23:
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 458              		.loc 1 114 12 view .LVU173
 115:AES_128.c     **** }
 459              		.loc 1 115 4 view .LVU174
 115:AES_128.c     **** }
 460              		.loc 1 115 21 is_stmt 0 view .LVU175
 461 0050 827A     		ldrb	r2, [r0, #10]
 462 0052 8B7A     		ldrb	r3, [r1, #10]
 463 0054 5340     		eors	r3, r2
 464 0056 8B72     		strb	r3, [r1, #10]
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 465              		.loc 1 114 17 is_stmt 1 view .LVU176
 466              	.LVL24:
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 467              		.loc 1 114 12 view .LVU177
 115:AES_128.c     **** }
 468              		.loc 1 115 4 view .LVU178
 115:AES_128.c     **** }
 469              		.loc 1 115 21 is_stmt 0 view .LVU179
 470 0058 C27A     		ldrb	r2, [r0, #11]
 471 005a CB7A     		ldrb	r3, [r1, #11]
 472 005c 5340     		eors	r3, r2
 473 005e CB72     		strb	r3, [r1, #11]
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 474              		.loc 1 114 17 is_stmt 1 view .LVU180
 475              	.LVL25:
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 476              		.loc 1 114 12 view .LVU181
 113:AES_128.c     **** 		for(j=0; j<4; j++)
 477              		.loc 1 113 16 view .LVU182
 113:AES_128.c     **** 		for(j=0; j<4; j++)
 478              		.loc 1 113 11 view .LVU183
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 479              		.loc 1 114 12 view .LVU184
 115:AES_128.c     **** }
 480              		.loc 1 115 4 view .LVU185
 115:AES_128.c     **** }
 481              		.loc 1 115 21 is_stmt 0 view .LVU186
 482 0060 027B     		ldrb	r2, [r0, #12]
 483 0062 0B7B     		ldrb	r3, [r1, #12]
 484 0064 5340     		eors	r3, r2
 485 0066 0B73     		strb	r3, [r1, #12]
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 486              		.loc 1 114 17 is_stmt 1 view .LVU187
 487              	.LVL26:
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 488              		.loc 1 114 12 view .LVU188
 115:AES_128.c     **** }
 489              		.loc 1 115 4 view .LVU189
 115:AES_128.c     **** }
 490              		.loc 1 115 21 is_stmt 0 view .LVU190
 491 0068 427B     		ldrb	r2, [r0, #13]
 492 006a 4B7B     		ldrb	r3, [r1, #13]
 493 006c 5340     		eors	r3, r2
 494 006e 4B73     		strb	r3, [r1, #13]
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 495              		.loc 1 114 17 is_stmt 1 view .LVU191
 496              	.LVL27:
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 497              		.loc 1 114 12 view .LVU192
 115:AES_128.c     **** }
 498              		.loc 1 115 4 view .LVU193
 115:AES_128.c     **** }
 499              		.loc 1 115 21 is_stmt 0 view .LVU194
 500 0070 827B     		ldrb	r2, [r0, #14]
 501 0072 8B7B     		ldrb	r3, [r1, #14]
 502 0074 5340     		eors	r3, r2
 503 0076 8B73     		strb	r3, [r1, #14]
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 504              		.loc 1 114 17 is_stmt 1 view .LVU195
 505              	.LVL28:
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 506              		.loc 1 114 12 view .LVU196
 115:AES_128.c     **** }
 507              		.loc 1 115 4 view .LVU197
 115:AES_128.c     **** }
 508              		.loc 1 115 21 is_stmt 0 view .LVU198
 509 0078 C27B     		ldrb	r2, [r0, #15]
 510 007a CB7B     		ldrb	r3, [r1, #15]
 511 007c 5340     		eors	r3, r2
 512 007e CB73     		strb	r3, [r1, #15]
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 513              		.loc 1 114 17 is_stmt 1 view .LVU199
 514              	.LVL29:
 114:AES_128.c     **** 			StateArray[i][j] ^= Key[i][j];
 515              		.loc 1 114 12 view .LVU200
 113:AES_128.c     **** 		for(j=0; j<4; j++)
 516              		.loc 1 113 16 view .LVU201
 113:AES_128.c     **** 		for(j=0; j<4; j++)
 517              		.loc 1 113 11 view .LVU202
 518              		.loc 1 116 1 is_stmt 0 view .LVU203
 519 0080 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE4:
 523 0082 C046     		.section	.text.AddMatrices,"ax",%progbits
 524              		.align	1
 525              		.p2align 2,,3
 526              		.global	AddMatrices
 527              		.syntax unified
 528              		.code	16
 529              		.thumb_func
 530              		.fpu softvfp
 532              	AddMatrices:
 533              	.LVL30:
 534              	.LFB5:
 117:AES_128.c     **** 
 118:AES_128.c     ****  void AddMatrices( unsigned char (*Mat1)[4], unsigned char (*Mat2)[4], unsigned char(*res)[4]){
 535              		.loc 1 118 95 is_stmt 1 view -0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 119:AES_128.c     **** 	int i,j;
 539              		.loc 1 119 2 view .LVU205
 120:AES_128.c     **** 	for(i=0; i<4; i++){
 540              		.loc 1 120 2 view .LVU206
 541              		.loc 1 120 11 view .LVU207
 121:AES_128.c     **** 		for(j=0; j<4; j++){
 542              		.loc 1 121 12 view .LVU208
 122:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 543              		.loc 1 122 4 view .LVU209
 118:AES_128.c     **** 	int i,j;
 544              		.loc 1 118 95 is_stmt 0 view .LVU210
 545 0000 10B5     		push	{r4, lr}
 546              	.LCFI3:
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 4, -8
 549              		.cfi_offset 14, -4
 550              		.loc 1 122 14 view .LVU211
 551 0002 0378     		ldrb	r3, [r0]
 552 0004 0C78     		ldrb	r4, [r1]
 123:AES_128.c     **** 		}
 124:AES_128.c     **** 		}
 125:AES_128.c     **** }
 553              		.loc 1 125 1 view .LVU212
 554              		@ sp needed
 122:AES_128.c     **** 		}
 555              		.loc 1 122 14 view .LVU213
 556 0006 6340     		eors	r3, r4
 557 0008 1370     		strb	r3, [r2]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 558              		.loc 1 121 17 is_stmt 1 view .LVU214
 559              	.LVL31:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 560              		.loc 1 121 12 view .LVU215
 122:AES_128.c     **** 		}
 561              		.loc 1 122 4 view .LVU216
 122:AES_128.c     **** 		}
 562              		.loc 1 122 14 is_stmt 0 view .LVU217
 563 000a 4C78     		ldrb	r4, [r1, #1]
 564 000c 4378     		ldrb	r3, [r0, #1]
 565 000e 6340     		eors	r3, r4
 566 0010 5370     		strb	r3, [r2, #1]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 567              		.loc 1 121 17 is_stmt 1 view .LVU218
 568              	.LVL32:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 569              		.loc 1 121 12 view .LVU219
 122:AES_128.c     **** 		}
 570              		.loc 1 122 4 view .LVU220
 122:AES_128.c     **** 		}
 571              		.loc 1 122 14 is_stmt 0 view .LVU221
 572 0012 8C78     		ldrb	r4, [r1, #2]
 573 0014 8378     		ldrb	r3, [r0, #2]
 574 0016 6340     		eors	r3, r4
 575 0018 9370     		strb	r3, [r2, #2]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 576              		.loc 1 121 17 is_stmt 1 view .LVU222
 577              	.LVL33:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 578              		.loc 1 121 12 view .LVU223
 122:AES_128.c     **** 		}
 579              		.loc 1 122 4 view .LVU224
 122:AES_128.c     **** 		}
 580              		.loc 1 122 14 is_stmt 0 view .LVU225
 581 001a CC78     		ldrb	r4, [r1, #3]
 582 001c C378     		ldrb	r3, [r0, #3]
 583 001e 6340     		eors	r3, r4
 584 0020 D370     		strb	r3, [r2, #3]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 585              		.loc 1 121 17 is_stmt 1 view .LVU226
 586              	.LVL34:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 587              		.loc 1 121 12 view .LVU227
 120:AES_128.c     **** 		for(j=0; j<4; j++){
 588              		.loc 1 120 16 view .LVU228
 120:AES_128.c     **** 		for(j=0; j<4; j++){
 589              		.loc 1 120 11 view .LVU229
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 590              		.loc 1 121 12 view .LVU230
 122:AES_128.c     **** 		}
 591              		.loc 1 122 4 view .LVU231
 122:AES_128.c     **** 		}
 592              		.loc 1 122 14 is_stmt 0 view .LVU232
 593 0022 0C79     		ldrb	r4, [r1, #4]
 594 0024 0379     		ldrb	r3, [r0, #4]
 595 0026 6340     		eors	r3, r4
 596 0028 1371     		strb	r3, [r2, #4]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 597              		.loc 1 121 17 is_stmt 1 view .LVU233
 598              	.LVL35:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 599              		.loc 1 121 12 view .LVU234
 122:AES_128.c     **** 		}
 600              		.loc 1 122 4 view .LVU235
 122:AES_128.c     **** 		}
 601              		.loc 1 122 14 is_stmt 0 view .LVU236
 602 002a 4C79     		ldrb	r4, [r1, #5]
 603 002c 4379     		ldrb	r3, [r0, #5]
 604 002e 6340     		eors	r3, r4
 605 0030 5371     		strb	r3, [r2, #5]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 606              		.loc 1 121 17 is_stmt 1 view .LVU237
 607              	.LVL36:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 608              		.loc 1 121 12 view .LVU238
 122:AES_128.c     **** 		}
 609              		.loc 1 122 4 view .LVU239
 122:AES_128.c     **** 		}
 610              		.loc 1 122 14 is_stmt 0 view .LVU240
 611 0032 8C79     		ldrb	r4, [r1, #6]
 612 0034 8379     		ldrb	r3, [r0, #6]
 613 0036 6340     		eors	r3, r4
 614 0038 9371     		strb	r3, [r2, #6]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 615              		.loc 1 121 17 is_stmt 1 view .LVU241
 616              	.LVL37:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 617              		.loc 1 121 12 view .LVU242
 122:AES_128.c     **** 		}
 618              		.loc 1 122 4 view .LVU243
 122:AES_128.c     **** 		}
 619              		.loc 1 122 14 is_stmt 0 view .LVU244
 620 003a CC79     		ldrb	r4, [r1, #7]
 621 003c C379     		ldrb	r3, [r0, #7]
 622 003e 6340     		eors	r3, r4
 623 0040 D371     		strb	r3, [r2, #7]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 624              		.loc 1 121 17 is_stmt 1 view .LVU245
 625              	.LVL38:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 626              		.loc 1 121 12 view .LVU246
 120:AES_128.c     **** 		for(j=0; j<4; j++){
 627              		.loc 1 120 16 view .LVU247
 120:AES_128.c     **** 		for(j=0; j<4; j++){
 628              		.loc 1 120 11 view .LVU248
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 629              		.loc 1 121 12 view .LVU249
 122:AES_128.c     **** 		}
 630              		.loc 1 122 4 view .LVU250
 122:AES_128.c     **** 		}
 631              		.loc 1 122 14 is_stmt 0 view .LVU251
 632 0042 0C7A     		ldrb	r4, [r1, #8]
 633 0044 037A     		ldrb	r3, [r0, #8]
 634 0046 6340     		eors	r3, r4
 635 0048 1372     		strb	r3, [r2, #8]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 636              		.loc 1 121 17 is_stmt 1 view .LVU252
 637              	.LVL39:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 638              		.loc 1 121 12 view .LVU253
 122:AES_128.c     **** 		}
 639              		.loc 1 122 4 view .LVU254
 122:AES_128.c     **** 		}
 640              		.loc 1 122 14 is_stmt 0 view .LVU255
 641 004a 437A     		ldrb	r3, [r0, #9]
 642 004c 4C7A     		ldrb	r4, [r1, #9]
 643 004e 6340     		eors	r3, r4
 644 0050 5372     		strb	r3, [r2, #9]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 645              		.loc 1 121 17 is_stmt 1 view .LVU256
 646              	.LVL40:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 647              		.loc 1 121 12 view .LVU257
 122:AES_128.c     **** 		}
 648              		.loc 1 122 4 view .LVU258
 122:AES_128.c     **** 		}
 649              		.loc 1 122 14 is_stmt 0 view .LVU259
 650 0052 837A     		ldrb	r3, [r0, #10]
 651 0054 8C7A     		ldrb	r4, [r1, #10]
 652 0056 6340     		eors	r3, r4
 653 0058 9372     		strb	r3, [r2, #10]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 654              		.loc 1 121 17 is_stmt 1 view .LVU260
 655              	.LVL41:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 656              		.loc 1 121 12 view .LVU261
 122:AES_128.c     **** 		}
 657              		.loc 1 122 4 view .LVU262
 122:AES_128.c     **** 		}
 658              		.loc 1 122 14 is_stmt 0 view .LVU263
 659 005a CC7A     		ldrb	r4, [r1, #11]
 660 005c C37A     		ldrb	r3, [r0, #11]
 661 005e 6340     		eors	r3, r4
 662 0060 D372     		strb	r3, [r2, #11]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 663              		.loc 1 121 17 is_stmt 1 view .LVU264
 664              	.LVL42:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 665              		.loc 1 121 12 view .LVU265
 120:AES_128.c     **** 		for(j=0; j<4; j++){
 666              		.loc 1 120 16 view .LVU266
 120:AES_128.c     **** 		for(j=0; j<4; j++){
 667              		.loc 1 120 11 view .LVU267
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 668              		.loc 1 121 12 view .LVU268
 122:AES_128.c     **** 		}
 669              		.loc 1 122 4 view .LVU269
 122:AES_128.c     **** 		}
 670              		.loc 1 122 14 is_stmt 0 view .LVU270
 671 0062 0C7B     		ldrb	r4, [r1, #12]
 672 0064 037B     		ldrb	r3, [r0, #12]
 673 0066 6340     		eors	r3, r4
 674 0068 1373     		strb	r3, [r2, #12]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 675              		.loc 1 121 17 is_stmt 1 view .LVU271
 676              	.LVL43:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 677              		.loc 1 121 12 view .LVU272
 122:AES_128.c     **** 		}
 678              		.loc 1 122 4 view .LVU273
 122:AES_128.c     **** 		}
 679              		.loc 1 122 14 is_stmt 0 view .LVU274
 680 006a 4C7B     		ldrb	r4, [r1, #13]
 681 006c 437B     		ldrb	r3, [r0, #13]
 682 006e 6340     		eors	r3, r4
 683 0070 5373     		strb	r3, [r2, #13]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 684              		.loc 1 121 17 is_stmt 1 view .LVU275
 685              	.LVL44:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 686              		.loc 1 121 12 view .LVU276
 122:AES_128.c     **** 		}
 687              		.loc 1 122 4 view .LVU277
 122:AES_128.c     **** 		}
 688              		.loc 1 122 14 is_stmt 0 view .LVU278
 689 0072 8C7B     		ldrb	r4, [r1, #14]
 690 0074 837B     		ldrb	r3, [r0, #14]
 691 0076 6340     		eors	r3, r4
 692 0078 9373     		strb	r3, [r2, #14]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 693              		.loc 1 121 17 is_stmt 1 view .LVU279
 694              	.LVL45:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 695              		.loc 1 121 12 view .LVU280
 122:AES_128.c     **** 		}
 696              		.loc 1 122 4 view .LVU281
 122:AES_128.c     **** 		}
 697              		.loc 1 122 14 is_stmt 0 view .LVU282
 698 007a C37B     		ldrb	r3, [r0, #15]
 699 007c C97B     		ldrb	r1, [r1, #15]
 700              	.LVL46:
 122:AES_128.c     **** 		}
 701              		.loc 1 122 14 view .LVU283
 702 007e 4B40     		eors	r3, r1
 703 0080 D373     		strb	r3, [r2, #15]
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 704              		.loc 1 121 17 is_stmt 1 view .LVU284
 705              	.LVL47:
 121:AES_128.c     **** 			res[i][j] = Mat1[i][j] ^ Mat2[i][j];
 706              		.loc 1 121 12 view .LVU285
 120:AES_128.c     **** 		for(j=0; j<4; j++){
 707              		.loc 1 120 16 view .LVU286
 120:AES_128.c     **** 		for(j=0; j<4; j++){
 708              		.loc 1 120 11 view .LVU287
 709              		.loc 1 125 1 is_stmt 0 view .LVU288
 710 0082 10BD     		pop	{r4, pc}
 711              		.cfi_endproc
 712              	.LFE5:
 714              		.section	.text.SubBytes,"ax",%progbits
 715              		.align	1
 716              		.p2align 2,,3
 717              		.global	SubBytes
 718              		.syntax unified
 719              		.code	16
 720              		.thumb_func
 721              		.fpu softvfp
 723              	SubBytes:
 724              	.LVL48:
 725              	.LFB6:
 126:AES_128.c     **** 
 127:AES_128.c     **** void SubBytes (unsigned char StateArray[][4])
 128:AES_128.c     **** {
 726              		.loc 1 128 1 is_stmt 1 view -0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 129:AES_128.c     **** 	int i,j;
 731              		.loc 1 129 2 view .LVU290
 130:AES_128.c     **** 	for(i=0; i<4; i++)
 732              		.loc 1 130 2 view .LVU291
 733              		.loc 1 130 11 view .LVU292
 131:AES_128.c     **** 		for(j=0; j<4; j++)
 734              		.loc 1 131 12 view .LVU293
 132:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 735              		.loc 1 132 4 view .LVU294
 736              		.loc 1 132 27 is_stmt 0 view .LVU295
 737 0000 184B     		ldr	r3, .L10
 738              		.loc 1 132 41 view .LVU296
 739 0002 0278     		ldrb	r2, [r0]
 133:AES_128.c     **** }
 740              		.loc 1 133 1 view .LVU297
 741              		@ sp needed
 132:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 742              		.loc 1 132 21 view .LVU298
 743 0004 9A5C     		ldrb	r2, [r3, r2]
 744 0006 0270     		strb	r2, [r0]
 131:AES_128.c     **** 		for(j=0; j<4; j++)
 745              		.loc 1 131 17 is_stmt 1 view .LVU299
 746              	.LVL49:
 131:AES_128.c     **** 		for(j=0; j<4; j++)
 747              		.loc 1 131 12 view .LVU300
 132:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 748              		.loc 1 132 4 view .LVU301
 132:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 749              		.loc 1 132 41 is_stmt 0 view .LVU302
 750 0008 4278     		ldrb	r2, [r0, #1]
 132:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 751              		.loc 1 132 21 view .LVU303
 752 000a 9A5C     		ldrb	r2, [r3, r2]
 753 000c 4270     		strb	r2, [r0, #1]
 131:AES_128.c     **** 		for(j=0; j<4; j++)
 754              		.loc 1 131 17 is_stmt 1 view .LVU304
 755              	.LVL50:
 131:AES_128.c     **** 		for(j=0; j<4; j++)
 756              		.loc 1 131 12 view .LVU305
 132:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 757              		.loc 1 132 4 view .LVU306
 132:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 758              		.loc 1 132 41 is_stmt 0 view .LVU307
 759 000e 8278     		ldrb	r2, [r0, #2]
 132:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 760              		.loc 1 132 21 view .LVU308
 761 0010 9A5C     		ldrb	r2, [r3, r2]
 762 0012 8270     		strb	r2, [r0, #2]
 131:AES_128.c     **** 		for(j=0; j<4; j++)
 763              		.loc 1 131 17 is_stmt 1 view .LVU309
 764              	.LVL51:
 131:AES_128.c     **** 		for(j=0; j<4; j++)
 765              		.loc 1 131 12 view .LVU310
 132:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 766              		.loc 1 132 4 view .LVU311
 132:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 767              		.loc 1 132 41 is_stmt 0 view .LVU312
 768 0014 C278     		ldrb	r2, [r0, #3]
 132:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 769              		.loc 1 132 21 view .LVU313
 770 0016 9A5C     		ldrb	r2, [r3, r2]
 771 0018 C270     		strb	r2, [r0, #3]
 131:AES_128.c     **** 		for(j=0; j<4; j++)
 772              		.loc 1 131 17 is_stmt 1 view .LVU314
 773              	.LVL52:
 131:AES_128.c     **** 		for(j=0; j<4; j++)
 774              		.loc 1 131 12 view .LVU315
 130:AES_128.c     **** 		for(j=0; j<4; j++)
 775              		.loc 1 130 16 view .LVU316
 130:AES_128.c     **** 		for(j=0; j<4; j++)
 776              		.loc 1 130 11 view .LVU317
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 777              		.loc 1 131 12 view .LVU318
 132:AES_128.c     **** }
 778              		.loc 1 132 4 view .LVU319
 132:AES_128.c     **** }
 779              		.loc 1 132 41 is_stmt 0 view .LVU320
 780 001a 0279     		ldrb	r2, [r0, #4]
 132:AES_128.c     **** }
 781              		.loc 1 132 21 view .LVU321
 782 001c 9A5C     		ldrb	r2, [r3, r2]
 783 001e 0271     		strb	r2, [r0, #4]
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 784              		.loc 1 131 17 is_stmt 1 view .LVU322
 785              	.LVL53:
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 786              		.loc 1 131 12 view .LVU323
 132:AES_128.c     **** }
 787              		.loc 1 132 4 view .LVU324
 132:AES_128.c     **** }
 788              		.loc 1 132 41 is_stmt 0 view .LVU325
 789 0020 4279     		ldrb	r2, [r0, #5]
 132:AES_128.c     **** }
 790              		.loc 1 132 21 view .LVU326
 791 0022 9A5C     		ldrb	r2, [r3, r2]
 792 0024 4271     		strb	r2, [r0, #5]
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 793              		.loc 1 131 17 is_stmt 1 view .LVU327
 794              	.LVL54:
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 795              		.loc 1 131 12 view .LVU328
 132:AES_128.c     **** }
 796              		.loc 1 132 4 view .LVU329
 132:AES_128.c     **** }
 797              		.loc 1 132 41 is_stmt 0 view .LVU330
 798 0026 8279     		ldrb	r2, [r0, #6]
 132:AES_128.c     **** }
 799              		.loc 1 132 21 view .LVU331
 800 0028 9A5C     		ldrb	r2, [r3, r2]
 801 002a 8271     		strb	r2, [r0, #6]
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 802              		.loc 1 131 17 is_stmt 1 view .LVU332
 803              	.LVL55:
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 804              		.loc 1 131 12 view .LVU333
 132:AES_128.c     **** }
 805              		.loc 1 132 4 view .LVU334
 132:AES_128.c     **** }
 806              		.loc 1 132 41 is_stmt 0 view .LVU335
 807 002c C279     		ldrb	r2, [r0, #7]
 132:AES_128.c     **** }
 808              		.loc 1 132 21 view .LVU336
 809 002e 9A5C     		ldrb	r2, [r3, r2]
 810 0030 C271     		strb	r2, [r0, #7]
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 811              		.loc 1 131 17 is_stmt 1 view .LVU337
 812              	.LVL56:
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 813              		.loc 1 131 12 view .LVU338
 130:AES_128.c     **** 		for(j=0; j<4; j++)
 814              		.loc 1 130 16 view .LVU339
 130:AES_128.c     **** 		for(j=0; j<4; j++)
 815              		.loc 1 130 11 view .LVU340
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 816              		.loc 1 131 12 view .LVU341
 132:AES_128.c     **** }
 817              		.loc 1 132 4 view .LVU342
 132:AES_128.c     **** }
 818              		.loc 1 132 41 is_stmt 0 view .LVU343
 819 0032 027A     		ldrb	r2, [r0, #8]
 132:AES_128.c     **** }
 820              		.loc 1 132 21 view .LVU344
 821 0034 9A5C     		ldrb	r2, [r3, r2]
 822 0036 0272     		strb	r2, [r0, #8]
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 823              		.loc 1 131 17 is_stmt 1 view .LVU345
 824              	.LVL57:
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 825              		.loc 1 131 12 view .LVU346
 132:AES_128.c     **** }
 826              		.loc 1 132 4 view .LVU347
 132:AES_128.c     **** }
 827              		.loc 1 132 41 is_stmt 0 view .LVU348
 828 0038 427A     		ldrb	r2, [r0, #9]
 132:AES_128.c     **** }
 829              		.loc 1 132 21 view .LVU349
 830 003a 9A5C     		ldrb	r2, [r3, r2]
 831 003c 4272     		strb	r2, [r0, #9]
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 832              		.loc 1 131 17 is_stmt 1 view .LVU350
 833              	.LVL58:
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 834              		.loc 1 131 12 view .LVU351
 132:AES_128.c     **** }
 835              		.loc 1 132 4 view .LVU352
 132:AES_128.c     **** }
 836              		.loc 1 132 41 is_stmt 0 view .LVU353
 837 003e 827A     		ldrb	r2, [r0, #10]
 132:AES_128.c     **** }
 838              		.loc 1 132 21 view .LVU354
 839 0040 9A5C     		ldrb	r2, [r3, r2]
 840 0042 8272     		strb	r2, [r0, #10]
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 841              		.loc 1 131 17 is_stmt 1 view .LVU355
 842              	.LVL59:
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 843              		.loc 1 131 12 view .LVU356
 132:AES_128.c     **** }
 844              		.loc 1 132 4 view .LVU357
 132:AES_128.c     **** }
 845              		.loc 1 132 41 is_stmt 0 view .LVU358
 846 0044 C27A     		ldrb	r2, [r0, #11]
 132:AES_128.c     **** }
 847              		.loc 1 132 21 view .LVU359
 848 0046 9A5C     		ldrb	r2, [r3, r2]
 849 0048 C272     		strb	r2, [r0, #11]
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 850              		.loc 1 131 17 is_stmt 1 view .LVU360
 851              	.LVL60:
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 852              		.loc 1 131 12 view .LVU361
 130:AES_128.c     **** 		for(j=0; j<4; j++)
 853              		.loc 1 130 16 view .LVU362
 130:AES_128.c     **** 		for(j=0; j<4; j++)
 854              		.loc 1 130 11 view .LVU363
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 855              		.loc 1 131 12 view .LVU364
 132:AES_128.c     **** }
 856              		.loc 1 132 4 view .LVU365
 132:AES_128.c     **** }
 857              		.loc 1 132 41 is_stmt 0 view .LVU366
 858 004a 027B     		ldrb	r2, [r0, #12]
 132:AES_128.c     **** }
 859              		.loc 1 132 21 view .LVU367
 860 004c 9A5C     		ldrb	r2, [r3, r2]
 861 004e 0273     		strb	r2, [r0, #12]
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 862              		.loc 1 131 17 is_stmt 1 view .LVU368
 863              	.LVL61:
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 864              		.loc 1 131 12 view .LVU369
 132:AES_128.c     **** }
 865              		.loc 1 132 4 view .LVU370
 132:AES_128.c     **** }
 866              		.loc 1 132 41 is_stmt 0 view .LVU371
 867 0050 427B     		ldrb	r2, [r0, #13]
 132:AES_128.c     **** }
 868              		.loc 1 132 21 view .LVU372
 869 0052 9A5C     		ldrb	r2, [r3, r2]
 870 0054 4273     		strb	r2, [r0, #13]
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 871              		.loc 1 131 17 is_stmt 1 view .LVU373
 872              	.LVL62:
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 873              		.loc 1 131 12 view .LVU374
 132:AES_128.c     **** }
 874              		.loc 1 132 4 view .LVU375
 132:AES_128.c     **** }
 875              		.loc 1 132 41 is_stmt 0 view .LVU376
 876 0056 827B     		ldrb	r2, [r0, #14]
 132:AES_128.c     **** }
 877              		.loc 1 132 21 view .LVU377
 878 0058 9A5C     		ldrb	r2, [r3, r2]
 879 005a 8273     		strb	r2, [r0, #14]
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 880              		.loc 1 131 17 is_stmt 1 view .LVU378
 881              	.LVL63:
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 882              		.loc 1 131 12 view .LVU379
 132:AES_128.c     **** }
 883              		.loc 1 132 4 view .LVU380
 132:AES_128.c     **** }
 884              		.loc 1 132 41 is_stmt 0 view .LVU381
 885 005c C27B     		ldrb	r2, [r0, #15]
 132:AES_128.c     **** }
 886              		.loc 1 132 21 view .LVU382
 887 005e 9B5C     		ldrb	r3, [r3, r2]
 888 0060 C373     		strb	r3, [r0, #15]
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 889              		.loc 1 131 17 is_stmt 1 view .LVU383
 890              	.LVL64:
 131:AES_128.c     **** 			StateArray[i][j] = SBox[StateArray[i][j]];
 891              		.loc 1 131 12 view .LVU384
 130:AES_128.c     **** 		for(j=0; j<4; j++)
 892              		.loc 1 130 16 view .LVU385
 130:AES_128.c     **** 		for(j=0; j<4; j++)
 893              		.loc 1 130 11 view .LVU386
 894              		.loc 1 133 1 is_stmt 0 view .LVU387
 895 0062 7047     		bx	lr
 896              	.L11:
 897              		.align	2
 898              	.L10:
 899 0064 00000000 		.word	SBox
 900              		.cfi_endproc
 901              	.LFE6:
 903              		.section	.text.ShiftRows,"ax",%progbits
 904              		.align	1
 905              		.p2align 2,,3
 906              		.global	ShiftRows
 907              		.syntax unified
 908              		.code	16
 909              		.thumb_func
 910              		.fpu softvfp
 912              	ShiftRows:
 913              	.LVL65:
 914              	.LFB7:
 134:AES_128.c     **** 
 135:AES_128.c     **** 
 136:AES_128.c     **** void ShiftRows (unsigned char Matrix[][4])
 137:AES_128.c     **** {
 915              		.loc 1 137 1 is_stmt 1 view -0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 138:AES_128.c     **** 	unsigned char x;
 920              		.loc 1 138 2 view .LVU389
 139:AES_128.c     **** 	x = Matrix[1][0];
 921              		.loc 1 139 2 view .LVU390
 140:AES_128.c     **** 	Matrix[1][0] = Matrix[1][1];
 922              		.loc 1 140 15 is_stmt 0 view .LVU391
 923 0000 4279     		ldrb	r2, [r0, #5]
 139:AES_128.c     **** 	x = Matrix[1][0];
 924              		.loc 1 139 4 view .LVU392
 925 0002 0379     		ldrb	r3, [r0, #4]
 926              	.LVL66:
 927              		.loc 1 140 2 is_stmt 1 view .LVU393
 928              		.loc 1 140 15 is_stmt 0 view .LVU394
 929 0004 0271     		strb	r2, [r0, #4]
 141:AES_128.c     **** 	Matrix[1][1] = Matrix[1][2];
 930              		.loc 1 141 2 is_stmt 1 view .LVU395
 931              		.loc 1 141 15 is_stmt 0 view .LVU396
 932 0006 8279     		ldrb	r2, [r0, #6]
 142:AES_128.c     **** 	Matrix[1][2] = Matrix[1][3];
 143:AES_128.c     **** 	Matrix[1][3] = x;
 144:AES_128.c     **** 	x = Matrix[2][0];
 145:AES_128.c     **** 	Matrix[2][0] = Matrix[2][2];
 146:AES_128.c     **** 	Matrix[2][2] = x;
 147:AES_128.c     **** 	x = Matrix[2][1];
 148:AES_128.c     **** 	Matrix[2][1] = Matrix[2][3];
 149:AES_128.c     **** 	Matrix[2][3] = x;
 150:AES_128.c     **** 	x = Matrix[3][3];
 151:AES_128.c     **** 	Matrix[3][3] = Matrix[3][2];
 152:AES_128.c     **** 	Matrix[3][2] = Matrix[3][1];
 153:AES_128.c     **** 	Matrix[3][1] = Matrix[3][0];
 154:AES_128.c     **** 	Matrix[3][0] = x;
 155:AES_128.c     **** }
 933              		.loc 1 155 1 view .LVU397
 934              		@ sp needed
 141:AES_128.c     **** 	Matrix[1][1] = Matrix[1][2];
 935              		.loc 1 141 15 view .LVU398
 936 0008 4271     		strb	r2, [r0, #5]
 142:AES_128.c     **** 	Matrix[1][2] = Matrix[1][3];
 937              		.loc 1 142 2 is_stmt 1 view .LVU399
 142:AES_128.c     **** 	Matrix[1][2] = Matrix[1][3];
 938              		.loc 1 142 15 is_stmt 0 view .LVU400
 939 000a C279     		ldrb	r2, [r0, #7]
 143:AES_128.c     **** 	x = Matrix[2][0];
 940              		.loc 1 143 15 view .LVU401
 941 000c C371     		strb	r3, [r0, #7]
 142:AES_128.c     **** 	Matrix[1][2] = Matrix[1][3];
 942              		.loc 1 142 15 view .LVU402
 943 000e 8271     		strb	r2, [r0, #6]
 143:AES_128.c     **** 	x = Matrix[2][0];
 944              		.loc 1 143 2 is_stmt 1 view .LVU403
 144:AES_128.c     **** 	Matrix[2][0] = Matrix[2][2];
 945              		.loc 1 144 2 view .LVU404
 145:AES_128.c     **** 	Matrix[2][2] = x;
 946              		.loc 1 145 15 is_stmt 0 view .LVU405
 947 0010 827A     		ldrb	r2, [r0, #10]
 144:AES_128.c     **** 	Matrix[2][0] = Matrix[2][2];
 948              		.loc 1 144 4 view .LVU406
 949 0012 037A     		ldrb	r3, [r0, #8]
 950              	.LVL67:
 145:AES_128.c     **** 	Matrix[2][2] = x;
 951              		.loc 1 145 2 is_stmt 1 view .LVU407
 145:AES_128.c     **** 	Matrix[2][2] = x;
 952              		.loc 1 145 15 is_stmt 0 view .LVU408
 953 0014 0272     		strb	r2, [r0, #8]
 146:AES_128.c     **** 	x = Matrix[2][1];
 954              		.loc 1 146 2 is_stmt 1 view .LVU409
 148:AES_128.c     **** 	Matrix[2][3] = x;
 955              		.loc 1 148 15 is_stmt 0 view .LVU410
 956 0016 C27A     		ldrb	r2, [r0, #11]
 146:AES_128.c     **** 	x = Matrix[2][1];
 957              		.loc 1 146 15 view .LVU411
 958 0018 8372     		strb	r3, [r0, #10]
 147:AES_128.c     **** 	Matrix[2][1] = Matrix[2][3];
 959              		.loc 1 147 2 is_stmt 1 view .LVU412
 147:AES_128.c     **** 	Matrix[2][1] = Matrix[2][3];
 960              		.loc 1 147 4 is_stmt 0 view .LVU413
 961 001a 437A     		ldrb	r3, [r0, #9]
 962              	.LVL68:
 148:AES_128.c     **** 	Matrix[2][3] = x;
 963              		.loc 1 148 2 is_stmt 1 view .LVU414
 148:AES_128.c     **** 	Matrix[2][3] = x;
 964              		.loc 1 148 15 is_stmt 0 view .LVU415
 965 001c 4272     		strb	r2, [r0, #9]
 149:AES_128.c     **** 	x = Matrix[3][3];
 966              		.loc 1 149 2 is_stmt 1 view .LVU416
 151:AES_128.c     **** 	Matrix[3][2] = Matrix[3][1];
 967              		.loc 1 151 15 is_stmt 0 view .LVU417
 968 001e 827B     		ldrb	r2, [r0, #14]
 149:AES_128.c     **** 	x = Matrix[3][3];
 969              		.loc 1 149 15 view .LVU418
 970 0020 C372     		strb	r3, [r0, #11]
 150:AES_128.c     **** 	Matrix[3][3] = Matrix[3][2];
 971              		.loc 1 150 2 is_stmt 1 view .LVU419
 150:AES_128.c     **** 	Matrix[3][3] = Matrix[3][2];
 972              		.loc 1 150 4 is_stmt 0 view .LVU420
 973 0022 C37B     		ldrb	r3, [r0, #15]
 974              	.LVL69:
 151:AES_128.c     **** 	Matrix[3][2] = Matrix[3][1];
 975              		.loc 1 151 2 is_stmt 1 view .LVU421
 151:AES_128.c     **** 	Matrix[3][2] = Matrix[3][1];
 976              		.loc 1 151 15 is_stmt 0 view .LVU422
 977 0024 C273     		strb	r2, [r0, #15]
 152:AES_128.c     **** 	Matrix[3][1] = Matrix[3][0];
 978              		.loc 1 152 2 is_stmt 1 view .LVU423
 152:AES_128.c     **** 	Matrix[3][1] = Matrix[3][0];
 979              		.loc 1 152 15 is_stmt 0 view .LVU424
 980 0026 427B     		ldrb	r2, [r0, #13]
 981 0028 8273     		strb	r2, [r0, #14]
 153:AES_128.c     **** 	Matrix[3][0] = x;
 982              		.loc 1 153 2 is_stmt 1 view .LVU425
 153:AES_128.c     **** 	Matrix[3][0] = x;
 983              		.loc 1 153 15 is_stmt 0 view .LVU426
 984 002a 027B     		ldrb	r2, [r0, #12]
 154:AES_128.c     **** }
 985              		.loc 1 154 15 view .LVU427
 986 002c 0373     		strb	r3, [r0, #12]
 153:AES_128.c     **** 	Matrix[3][0] = x;
 987              		.loc 1 153 15 view .LVU428
 988 002e 4273     		strb	r2, [r0, #13]
 154:AES_128.c     **** }
 989              		.loc 1 154 2 is_stmt 1 view .LVU429
 990              		.loc 1 155 1 is_stmt 0 view .LVU430
 991 0030 7047     		bx	lr
 992              		.cfi_endproc
 993              	.LFE7:
 995 0032 C046     		.section	.text.MixColumns,"ax",%progbits
 996              		.align	1
 997              		.p2align 2,,3
 998              		.global	MixColumns
 999              		.syntax unified
 1000              		.code	16
 1001              		.thumb_func
 1002              		.fpu softvfp
 1004              	MixColumns:
 1005              	.LVL70:
 1006              	.LFB8:
 156:AES_128.c     **** 
 157:AES_128.c     **** void MixColumns (unsigned char S_Array[][4])
 158:AES_128.c     **** {
 1007              		.loc 1 158 1 is_stmt 1 view -0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 72
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 159:AES_128.c     **** 
 160:AES_128.c     **** 	int i;
 1011              		.loc 1 160 2 view .LVU432
 161:AES_128.c     **** 	unsigned char StateArrayTmp[4][4];
 1012              		.loc 1 161 2 view .LVU433
 162:AES_128.c     **** 
 163:AES_128.c     **** 	for ( i = 0; i < 4; i ++)
 1013              		.loc 1 163 2 view .LVU434
 1014              		.loc 1 163 15 view .LVU435
 164:AES_128.c     **** 	{
 165:AES_128.c     **** 	StateArrayTmp [0][ i ] = xTime2 [ S_Array [0][ i ]] ^ xTime3 [ S_Array [1][ i ]] ^
 1015              		.loc 1 165 2 view .LVU436
 158:AES_128.c     **** 
 1016              		.loc 1 158 1 is_stmt 0 view .LVU437
 1017 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1018              	.LCFI4:
 1019              		.cfi_def_cfa_offset 20
 1020              		.cfi_offset 4, -20
 1021              		.cfi_offset 5, -16
 1022              		.cfi_offset 6, -12
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 DE46     		mov	lr, fp
 1026 0004 5746     		mov	r7, r10
 1027 0006 4E46     		mov	r6, r9
 1028 0008 4546     		mov	r5, r8
 1029 000a E0B5     		push	{r5, r6, r7, lr}
 1030              	.LCFI5:
 1031              		.cfi_def_cfa_offset 36
 1032              		.cfi_offset 8, -36
 1033              		.cfi_offset 9, -32
 1034              		.cfi_offset 10, -28
 1035              		.cfi_offset 11, -24
 1036              		.loc 1 165 47 view .LVU438
 1037 000c 0378     		ldrb	r3, [r0]
 158:AES_128.c     **** 
 1038              		.loc 1 158 1 view .LVU439
 1039 000e 93B0     		sub	sp, sp, #76
 1040              	.LCFI6:
 1041              		.cfi_def_cfa_offset 112
 1042              		.loc 1 165 47 view .LVU440
 1043 0010 9846     		mov	r8, r3
 1044              		.loc 1 165 76 view .LVU441
 1045 0012 0379     		ldrb	r3, [r0, #4]
 1046 0014 9C46     		mov	ip, r3
 166:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1047              		.loc 1 166 15 view .LVU442
 1048 0016 037A     		ldrb	r3, [r0, #8]
 1049 0018 0693     		str	r3, [sp, #24]
 1050              		.loc 1 166 34 view .LVU443
 1051 001a 037B     		ldrb	r3, [r0, #12]
 1052 001c 9946     		mov	r9, r3
 167:AES_128.c     **** 	StateArrayTmp [1][ i ] = S_Array [0][ i ] ^ xTime2 [ S_Array [1][ i ]] ^ xTime3 [
 1053              		.loc 1 167 2 is_stmt 1 view .LVU444
 168:AES_128.c     **** 	        S_Array [2][ i ]] ^ S_Array [3][ i ];
 169:AES_128.c     **** 	StateArrayTmp [2][ i ] = S_Array [0][ i ] ^ S_Array [1][ i ] ^ xTime2 [ S_Array [2][ i
 1054              		.loc 1 169 2 view .LVU445
 170:AES_128.c     **** 	]] ^ xTime3 [ S_Array [3][ i ]];
 171:AES_128.c     **** 	StateArrayTmp [3][ i ] = xTime3 [ S_Array [0][ i ]] ^ S_Array [1][ i ] ^ S_Array [2][
 1055              		.loc 1 171 2 view .LVU446
 163:AES_128.c     **** 	{
 1056              		.loc 1 163 22 view .LVU447
 1057              	.LVL71:
 163:AES_128.c     **** 	{
 1058              		.loc 1 163 15 view .LVU448
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1059              		.loc 1 165 2 view .LVU449
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1060              		.loc 1 165 47 is_stmt 0 view .LVU450
 1061 001e 4378     		ldrb	r3, [r0, #1]
 1062 0020 0593     		str	r3, [sp, #20]
 166:AES_128.c     **** 	StateArrayTmp [1][ i ] = S_Array [0][ i ] ^ xTime2 [ S_Array [1][ i ]] ^ xTime3 [
 1063              		.loc 1 166 15 view .LVU451
 1064 0022 457A     		ldrb	r5, [r0, #9]
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1065              		.loc 1 165 76 view .LVU452
 1066 0024 4479     		ldrb	r4, [r0, #5]
 166:AES_128.c     **** 	StateArrayTmp [1][ i ] = S_Array [0][ i ] ^ xTime2 [ S_Array [1][ i ]] ^ xTime3 [
 1067              		.loc 1 166 15 view .LVU453
 1068 0026 0495     		str	r5, [sp, #16]
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1069              		.loc 1 165 47 view .LVU454
 1070 0028 8278     		ldrb	r2, [r0, #2]
 166:AES_128.c     **** 	StateArrayTmp [1][ i ] = S_Array [0][ i ] ^ xTime2 [ S_Array [1][ i ]] ^ xTime3 [
 1071              		.loc 1 166 34 view .LVU455
 1072 002a 477B     		ldrb	r7, [r0, #13]
 167:AES_128.c     **** 	        S_Array [2][ i ]] ^ S_Array [3][ i ];
 1073              		.loc 1 167 2 is_stmt 1 view .LVU456
 169:AES_128.c     **** 	]] ^ xTime3 [ S_Array [3][ i ]];
 1074              		.loc 1 169 2 view .LVU457
 1075              		.loc 1 171 2 view .LVU458
 163:AES_128.c     **** 	{
 1076              		.loc 1 163 22 view .LVU459
 1077              	.LVL72:
 163:AES_128.c     **** 	{
 1078              		.loc 1 163 15 view .LVU460
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1079              		.loc 1 165 2 view .LVU461
 167:AES_128.c     **** 	        S_Array [2][ i ]] ^ S_Array [3][ i ];
 1080              		.loc 1 167 2 view .LVU462
 169:AES_128.c     **** 	]] ^ xTime3 [ S_Array [3][ i ]];
 1081              		.loc 1 169 2 view .LVU463
 1082              		.loc 1 171 2 view .LVU464
 163:AES_128.c     **** 	{
 1083              		.loc 1 163 22 view .LVU465
 163:AES_128.c     **** 	{
 1084              		.loc 1 163 15 view .LVU466
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1085              		.loc 1 165 2 view .LVU467
 167:AES_128.c     **** 	        S_Array [2][ i ]] ^ S_Array [3][ i ];
 1086              		.loc 1 167 2 view .LVU468
 169:AES_128.c     **** 	]] ^ xTime3 [ S_Array [3][ i ]];
 1087              		.loc 1 169 2 view .LVU469
 1088              		.loc 1 171 2 view .LVU470
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1089              		.loc 1 165 47 is_stmt 0 view .LVU471
 1090 002c 0792     		str	r2, [sp, #28]
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1091              		.loc 1 165 76 view .LVU472
 1092 002e 8679     		ldrb	r6, [r0, #6]
 1093              		.loc 1 171 25 view .LVU473
 1094 0030 4546     		mov	r5, r8
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1095              		.loc 1 165 76 view .LVU474
 1096 0032 0896     		str	r6, [sp, #32]
 166:AES_128.c     **** 	StateArrayTmp [1][ i ] = S_Array [0][ i ] ^ xTime2 [ S_Array [1][ i ]] ^ xTime3 [
 1097              		.loc 1 166 15 view .LVU475
 1098 0034 817A     		ldrb	r1, [r0, #10]
 1099 0036 0991     		str	r1, [sp, #36]
 166:AES_128.c     **** 	StateArrayTmp [1][ i ] = S_Array [0][ i ] ^ xTime2 [ S_Array [1][ i ]] ^ xTime3 [
 1100              		.loc 1 166 34 view .LVU476
 1101 0038 817B     		ldrb	r1, [r0, #14]
 1102 003a 0A91     		str	r1, [sp, #40]
 1103              		.loc 1 171 25 view .LVU477
 1104 003c 6146     		mov	r1, ip
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1105              		.loc 1 165 47 view .LVU478
 1106 003e C378     		ldrb	r3, [r0, #3]
 1107 0040 0093     		str	r3, [sp]
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1108              		.loc 1 165 76 view .LVU479
 1109 0042 C379     		ldrb	r3, [r0, #7]
 1110 0044 0193     		str	r3, [sp, #4]
 166:AES_128.c     **** 	StateArrayTmp [1][ i ] = S_Array [0][ i ] ^ xTime2 [ S_Array [1][ i ]] ^ xTime3 [
 1111              		.loc 1 166 15 view .LVU480
 1112 0046 C27A     		ldrb	r2, [r0, #11]
 1113              		.loc 1 171 25 view .LVU481
 1114 0048 069B     		ldr	r3, [sp, #24]
 166:AES_128.c     **** 	StateArrayTmp [1][ i ] = S_Array [0][ i ] ^ xTime2 [ S_Array [1][ i ]] ^ xTime3 [
 1115              		.loc 1 166 15 view .LVU482
 1116 004a 0292     		str	r2, [sp, #8]
 166:AES_128.c     **** 	StateArrayTmp [1][ i ] = S_Array [0][ i ] ^ xTime2 [ S_Array [1][ i ]] ^ xTime3 [
 1117              		.loc 1 166 34 view .LVU483
 1118 004c C27B     		ldrb	r2, [r0, #15]
 1119              		.loc 1 171 25 view .LVU484
 1120 004e 5940     		eors	r1, r3
 166:AES_128.c     **** 	StateArrayTmp [1][ i ] = S_Array [0][ i ] ^ xTime2 [ S_Array [1][ i ]] ^ xTime3 [
 1121              		.loc 1 166 34 view .LVU485
 1122 0050 0392     		str	r2, [sp, #12]
 1123              		.loc 1 171 34 view .LVU486
 1124 0052 6B4A     		ldr	r2, .L14
 1125              		.loc 1 171 25 view .LVU487
 1126 0054 535D     		ldrb	r3, [r2, r5]
 1127 0056 4D46     		mov	r5, r9
 1128 0058 4B40     		eors	r3, r1
 172:AES_128.c     **** 	 i ] ^ xTime2 [ S_Array [3][ i ]];
 1129              		.loc 1 172 16 view .LVU488
 1130 005a 6A49     		ldr	r1, .L14+4
 171:AES_128.c     **** 	 i ] ^ xTime2 [ S_Array [3][ i ]];
 1131              		.loc 1 171 25 view .LVU489
 1132 005c 0B94     		str	r4, [sp, #44]
 1133 005e 4D5D     		ldrb	r5, [r1, r5]
 1134 0060 059E     		ldr	r6, [sp, #20]
 1135 0062 AA46     		mov	r10, r5
 1136 0064 049D     		ldr	r5, [sp, #16]
 1137 0066 6C40     		eors	r4, r5
 1138 0068 A346     		mov	fp, r4
 1139 006a 5D46     		mov	r5, fp
 1140 006c 945D     		ldrb	r4, [r2, r6]
 1141 006e 089E     		ldr	r6, [sp, #32]
 1142 0070 6C40     		eors	r4, r5
 1143 0072 CD5D     		ldrb	r5, [r1, r7]
 1144 0074 6C40     		eors	r4, r5
 1145 0076 5546     		mov	r5, r10
 1146 0078 6B40     		eors	r3, r5
 1147 007a 099D     		ldr	r5, [sp, #36]
 1148 007c 2402     		lsls	r4, r4, #8
 1149 007e 6E40     		eors	r6, r5
 1150 0080 B246     		mov	r10, r6
 1151 0082 079E     		ldr	r6, [sp, #28]
 1152 0084 2343     		orrs	r3, r4
 1153 0086 955D     		ldrb	r5, [r2, r6]
 1154 0088 019C     		ldr	r4, [sp, #4]
 1155 008a AB46     		mov	fp, r5
 1156 008c 5546     		mov	r5, r10
 1157 008e 5E46     		mov	r6, fp
 1158 0090 7540     		eors	r5, r6
 1159 0092 0A9E     		ldr	r6, [sp, #40]
 1160 0094 AA46     		mov	r10, r5
 1161 0096 8D5D     		ldrb	r5, [r1, r6]
 1162 0098 AB46     		mov	fp, r5
 1163 009a 5546     		mov	r5, r10
 1164 009c 5E46     		mov	r6, fp
 1165 009e 7540     		eors	r5, r6
 1166 00a0 2D04     		lsls	r5, r5, #16
 1167 00a2 AA46     		mov	r10, r5
 1168 00a4 009E     		ldr	r6, [sp]
 1169 00a6 029D     		ldr	r5, [sp, #8]
 1170 00a8 6C40     		eors	r4, r5
 1171 00aa 955D     		ldrb	r5, [r2, r6]
 1172 00ac 039E     		ldr	r6, [sp, #12]
 1173 00ae 6C40     		eors	r4, r5
 1174 00b0 8D5D     		ldrb	r5, [r1, r6]
 169:AES_128.c     **** 	]] ^ xTime3 [ S_Array [3][ i ]];
 1175              		.loc 1 169 25 view .LVU490
 1176 00b2 059E     		ldr	r6, [sp, #20]
 1177 00b4 6C40     		eors	r4, r5
 1178 00b6 5546     		mov	r5, r10
 1179 00b8 2406     		lsls	r4, r4, #24
 1180 00ba 2B43     		orrs	r3, r5
 1181 00bc 2343     		orrs	r3, r4
 1182 00be 0C93     		str	r3, [sp, #48]
 1183 00c0 4446     		mov	r4, r8
 1184 00c2 6346     		mov	r3, ip
 1185 00c4 6340     		eors	r3, r4
 1186 00c6 069C     		ldr	r4, [sp, #24]
 1187 00c8 049D     		ldr	r5, [sp, #16]
 1188 00ca 0C5D     		ldrb	r4, [r1, r4]
 1189 00cc 4D5D     		ldrb	r5, [r1, r5]
 1190 00ce 6340     		eors	r3, r4
 1191 00d0 4C46     		mov	r4, r9
 1192 00d2 145D     		ldrb	r4, [r2, r4]
 1193 00d4 A246     		mov	r10, r4
 1194 00d6 0B9C     		ldr	r4, [sp, #44]
 1195 00d8 7440     		eors	r4, r6
 1196 00da 6C40     		eors	r4, r5
 1197 00dc D55D     		ldrb	r5, [r2, r7]
 1198 00de 089E     		ldr	r6, [sp, #32]
 1199 00e0 6C40     		eors	r4, r5
 1200 00e2 5546     		mov	r5, r10
 1201 00e4 2402     		lsls	r4, r4, #8
 1202 00e6 6B40     		eors	r3, r5
 1203 00e8 2343     		orrs	r3, r4
 1204 00ea 099D     		ldr	r5, [sp, #36]
 1205 00ec 079C     		ldr	r4, [sp, #28]
 1206 00ee 6640     		eors	r6, r4
 1207 00f0 4C5D     		ldrb	r4, [r1, r5]
 1208 00f2 7440     		eors	r4, r6
 1209 00f4 0A9E     		ldr	r6, [sp, #40]
 1210 00f6 955D     		ldrb	r5, [r2, r6]
 1211 00f8 019E     		ldr	r6, [sp, #4]
 1212 00fa 6C40     		eors	r4, r5
 1213 00fc 424D     		ldr	r5, .L14+8
 1214 00fe 2404     		lsls	r4, r4, #16
 1215 0100 2B40     		ands	r3, r5
 1216 0102 2343     		orrs	r3, r4
 1217 0104 029D     		ldr	r5, [sp, #8]
 1218 0106 009C     		ldr	r4, [sp]
 1219 0108 1B02     		lsls	r3, r3, #8
 1220 010a 6640     		eors	r6, r4
 1221 010c 4C5D     		ldrb	r4, [r1, r5]
 1222 010e 1B0A     		lsrs	r3, r3, #8
 1223 0110 7440     		eors	r4, r6
 1224 0112 039E     		ldr	r6, [sp, #12]
 1225 0114 955D     		ldrb	r5, [r2, r6]
 167:AES_128.c     **** 	        S_Array [2][ i ]] ^ S_Array [3][ i ];
 1226              		.loc 1 167 25 view .LVU491
 1227 0116 0A9E     		ldr	r6, [sp, #40]
 1228 0118 6C40     		eors	r4, r5
 1229 011a 2406     		lsls	r4, r4, #24
 1230 011c 2343     		orrs	r3, r4
 1231 011e 0D93     		str	r3, [sp, #52]
 1232 0120 4C46     		mov	r4, r9
 1233 0122 4346     		mov	r3, r8
 1234 0124 6340     		eors	r3, r4
 1235 0126 1C00     		movs	r4, r3
 1236 0128 6346     		mov	r3, ip
 1237 012a CB5C     		ldrb	r3, [r1, r3]
 1238 012c 6340     		eors	r3, r4
 1239 012e 069C     		ldr	r4, [sp, #24]
 1240 0130 145D     		ldrb	r4, [r2, r4]
 1241 0132 A246     		mov	r10, r4
 1242 0134 059C     		ldr	r4, [sp, #20]
 1243 0136 7C40     		eors	r4, r7
 1244 0138 A346     		mov	fp, r4
 1245 013a 5D46     		mov	r5, fp
 1246 013c 0B9C     		ldr	r4, [sp, #44]
 1247 013e 0C5D     		ldrb	r4, [r1, r4]
 1248 0140 6C40     		eors	r4, r5
 1249 0142 049D     		ldr	r5, [sp, #16]
 1250 0144 555D     		ldrb	r5, [r2, r5]
 1251 0146 6C40     		eors	r4, r5
 1252 0148 5546     		mov	r5, r10
 1253 014a 2402     		lsls	r4, r4, #8
 1254 014c 6B40     		eors	r3, r5
 1255 014e 2343     		orrs	r3, r4
 1256 0150 079C     		ldr	r4, [sp, #28]
 1257 0152 099D     		ldr	r5, [sp, #36]
 1258 0154 7440     		eors	r4, r6
 1259 0156 089E     		ldr	r6, [sp, #32]
 1260 0158 8E5D     		ldrb	r6, [r1, r6]
 1261 015a 7440     		eors	r4, r6
 1262 015c 565D     		ldrb	r6, [r2, r5]
 1263 015e 2A4D     		ldr	r5, .L14+8
 1264 0160 7440     		eors	r4, r6
 1265 0162 2404     		lsls	r4, r4, #16
 1266 0164 2B40     		ands	r3, r5
 1267 0166 009E     		ldr	r6, [sp]
 1268 0168 2343     		orrs	r3, r4
 1269 016a 039C     		ldr	r4, [sp, #12]
 1270 016c 029D     		ldr	r5, [sp, #8]
 1271 016e 6640     		eors	r6, r4
 1272 0170 3400     		movs	r4, r6
 1273 0172 019E     		ldr	r6, [sp, #4]
 1274 0174 1B02     		lsls	r3, r3, #8
 1275 0176 8E5D     		ldrb	r6, [r1, r6]
 1276 0178 1B0A     		lsrs	r3, r3, #8
 1277 017a 7440     		eors	r4, r6
 1278 017c 565D     		ldrb	r6, [r2, r5]
 1279 017e 7440     		eors	r4, r6
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1280              		.loc 1 165 25 view .LVU492
 1281 0180 4E46     		mov	r6, r9
 1282 0182 2406     		lsls	r4, r4, #24
 1283 0184 2343     		orrs	r3, r4
 1284 0186 069C     		ldr	r4, [sp, #24]
 1285 0188 7440     		eors	r4, r6
 1286 018a 2600     		movs	r6, r4
 1287 018c 4446     		mov	r4, r8
 1288 018e 0C5D     		ldrb	r4, [r1, r4]
 1289 0190 6640     		eors	r6, r4
 1290 0192 6446     		mov	r4, ip
 1291 0194 145D     		ldrb	r4, [r2, r4]
 1292 0196 049D     		ldr	r5, [sp, #16]
 1293 0198 6640     		eors	r6, r4
 1294 019a 7D40     		eors	r5, r7
 1295 019c 059F     		ldr	r7, [sp, #20]
 1296 019e 089C     		ldr	r4, [sp, #32]
 1297 01a0 CF5D     		ldrb	r7, [r1, r7]
 1298 01a2 0F93     		str	r3, [sp, #60]
 1299 01a4 6F40     		eors	r7, r5
 1300 01a6 0B9D     		ldr	r5, [sp, #44]
 1301 01a8 0C9B     		ldr	r3, [sp, #48]
 1302 01aa 555D     		ldrb	r5, [r2, r5]
 1303 01ac 1193     		str	r3, [sp, #68]
 163:AES_128.c     **** 	{
 1304              		.loc 1 163 22 is_stmt 1 view .LVU493
 1305              	.LVL73:
 163:AES_128.c     **** 	{
 1306              		.loc 1 163 15 view .LVU494
 173:AES_128.c     **** 	}
 174:AES_128.c     **** 	memcpy(S_Array, StateArrayTmp, 4 * 4 * sizeof(unsigned char));
 1307              		.loc 1 174 2 view .LVU495
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1308              		.loc 1 165 25 is_stmt 0 view .LVU496
 1309 01ae 6F40     		eors	r7, r5
 1310 01b0 3F02     		lsls	r7, r7, #8
 1311 01b2 099D     		ldr	r5, [sp, #36]
 1312 01b4 3E43     		orrs	r6, r7
 1313 01b6 0A9F     		ldr	r7, [sp, #40]
 1314 01b8 6F40     		eors	r7, r5
 1315 01ba 079D     		ldr	r5, [sp, #28]
 1316 01bc 4D5D     		ldrb	r5, [r1, r5]
 1317 01be 7D40     		eors	r5, r7
 1318 01c0 175D     		ldrb	r7, [r2, r4]
 1319 01c2 7D40     		eors	r5, r7
 1320 01c4 2D04     		lsls	r5, r5, #16
 1321 01c6 039F     		ldr	r7, [sp, #12]
 1322 01c8 2E43     		orrs	r6, r5
 1323 01ca 029D     		ldr	r5, [sp, #8]
 1324 01cc 3602     		lsls	r6, r6, #8
 1325 01ce 6F40     		eors	r7, r5
 1326 01d0 3C00     		movs	r4, r7
 1327 01d2 009D     		ldr	r5, [sp]
 1328 01d4 360A     		lsrs	r6, r6, #8
 1329 01d6 4F5D     		ldrb	r7, [r1, r5]
 1330              		.loc 1 174 2 view .LVU497
 1331 01d8 0EA9     		add	r1, sp, #56
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1332              		.loc 1 165 25 view .LVU498
 1333 01da 6740     		eors	r7, r4
 1334 01dc 019C     		ldr	r4, [sp, #4]
 1335 01de 125D     		ldrb	r2, [r2, r4]
 1336 01e0 5740     		eors	r7, r2
 1337 01e2 0D9A     		ldr	r2, [sp, #52]
 1338 01e4 3F06     		lsls	r7, r7, #24
 1339 01e6 1092     		str	r2, [sp, #64]
 1340 01e8 3E43     		orrs	r6, r7
 1341              		.loc 1 174 2 view .LVU499
 1342 01ea 1022     		movs	r2, #16
 165:AES_128.c     **** 			S_Array [2][ i ] ^ S_Array [3][ i ];
 1343              		.loc 1 165 25 view .LVU500
 1344 01ec 0E96     		str	r6, [sp, #56]
 1345              		.loc 1 174 2 view .LVU501
 1346 01ee FFF7FEFF 		bl	memcpy
 1347              	.LVL74:
 175:AES_128.c     **** }
 1348              		.loc 1 175 1 view .LVU502
 1349 01f2 13B0     		add	sp, sp, #76
 1350              		@ sp needed
 1351 01f4 F0BC     		pop	{r4, r5, r6, r7}
 1352 01f6 BB46     		mov	fp, r7
 1353 01f8 B246     		mov	r10, r6
 1354 01fa A946     		mov	r9, r5
 1355 01fc A046     		mov	r8, r4
 1356 01fe F0BD     		pop	{r4, r5, r6, r7, pc}
 1357              	.L15:
 1358              		.align	2
 1359              	.L14:
 1360 0200 00000000 		.word	xTime3
 1361 0204 00000000 		.word	xTime2
 1362 0208 FFFF00FF 		.word	-16711681
 1363              		.cfi_endproc
 1364              	.LFE8:
 1366              		.global	RCon
 1367              		.global	xTime3
 1368              		.global	xTime2
 1369              		.global	SBox
 1370              		.section	.rodata
 1371              		.align	2
 1372              		.set	.LANCHOR0,. + 0
 1375              	RCon:
 1376 0000 01020408 		.ascii	"\001\002\004\010\020 @\200\0336"
 1376      10204080 
 1376      1B36
 1377 000a 0000     		.space	2
 1380              	xTime3:
 1381 000c 00030605 		.ascii	"\000\003\006\005\014\017\012\011\030\033\036\035\024"
 1381      0C0F0A09 
 1381      181B1E1D 
 1381      14
 1382 0019 17121130 		.ascii	"\027\022\0210365<?:9(+.-$'\"!`cfelojix{~}twrqPSVU\\"
 1382      3336353C 
 1382      3F3A3928 
 1382      2B2E2D24 
 1382      27222160 
 1383 0041 5F5A5948 		.ascii	"_ZYHKNMDGBA\300\303\306\305\314\317\312\311\330\333"
 1383      4B4E4D44 
 1383      474241C0 
 1383      C3C6C5CC 
 1383      CFCAC9D8 
 1384 0056 DEDDD4D7 		.ascii	"\336\335\324\327\322\321\360\363\366\365\374\377\372"
 1384      D2D1F0F3 
 1384      F6F5FCFF 
 1384      FA
 1385 0063 F9E8EBEE 		.ascii	"\371\350\353\356\355\344\347\342\341\240\243\246\245"
 1385      EDE4E7E2 
 1385      E1A0A3A6 
 1385      A5
 1386 0070 ACAFAAA9 		.ascii	"\254\257\252\251\270\273\276\275\264\267\262\261\220"
 1386      B8BBBEBD 
 1386      B4B7B2B1 
 1386      90
 1387 007d 9396959C 		.ascii	"\223\226\225\234\237\232\231\210\213\216\215\204\207"
 1387      9F9A9988 
 1387      8B8E8D84 
 1387      87
 1388 008a 82819B98 		.ascii	"\202\201\233\230\235\236\227\224\221\222\203\200\205"
 1388      9D9E9794 
 1388      91928380 
 1388      85
 1389 0097 868F8C89 		.ascii	"\206\217\214\211\212\253\250\255\256\247\244\241\242"
 1389      8AABA8AD 
 1389      AEA7A4A1 
 1389      A2
 1390 00a4 B3B0B5B6 		.ascii	"\263\260\265\266\277\274\271\272\373\370\375\376\367"
 1390      BFBCB9BA 
 1390      FBF8FDFE 
 1390      F7
 1391 00b1 F4F1F2E3 		.ascii	"\364\361\362\343\340\345\346\357\354\351\352\313\310"
 1391      E0E5E6EF 
 1391      ECE9EACB 
 1391      C8
 1392 00be CDCEC7C4 		.ascii	"\315\316\307\304\301\302\323\320\325\326\337\334\331"
 1392      C1C2D3D0 
 1392      D5D6DFDC 
 1392      D9
 1393 00cb DA5B585D 		.ascii	"\332[X]^WTQRC@EFOLIJkhmngdabspuv\177|yz;8=>7412# %&"
 1393      5E575451 
 1393      52434045 
 1393      464F4C49 
 1393      4A6B686D 
 1394 00f8 2F2C292A 		.ascii	"/,)*\013\010\015\016\007\004\001\002\023\020\025\026"
 1394      0B080D0E 
 1394      07040102 
 1394      13101516 
 1395 0108 1F1C191A 		.ascii	"\037\034\031\032"
 1398              	xTime2:
 1399 010c 00020406 		.ascii	"\000\002\004\006\010\012\014\016\020\022\024\026\030"
 1399      080A0C0E 
 1399      10121416 
 1399      18
 1400 0119 1A1C1E20 		.ascii	"\032\034\036 \"$&(*,.02468:<>@BDFHJLNPRTVXZ\\^`bdfh"
 1400      22242628 
 1400      2A2C2E30 
 1400      32343638 
 1400      3A3C3E40 
 1401 0141 6A6C6E70 		.ascii	"jlnprtvxz|~\200\202\204\206\210\212\214\216\220\222"
 1401      72747678 
 1401      7A7C7E80 
 1401      82848688 
 1401      8A8C8E90 
 1402 0156 9496989A 		.ascii	"\224\226\230\232\234\236\240\242\244\246\250\252\254"
 1402      9C9EA0A2 
 1402      A4A6A8AA 
 1402      AC
 1403 0163 AEB0B2B4 		.ascii	"\256\260\262\264\266\270\272\274\276\300\302\304\306"
 1403      B6B8BABC 
 1403      BEC0C2C4 
 1403      C6
 1404 0170 C8CACCCE 		.ascii	"\310\312\314\316\320\322\324\326\330\332\334\336\340"
 1404      D0D2D4D6 
 1404      D8DADCDE 
 1404      E0
 1405 017d E2E4E6E8 		.ascii	"\342\344\346\350\352\354\356\360\362\364\366\370\372"
 1405      EAECEEF0 
 1405      F2F4F6F8 
 1405      FA
 1406 018a FCFE1B19 		.ascii	"\374\376\033\031\037\035\023\021\027\025\013\011\017"
 1406      1F1D1311 
 1406      17150B09 
 1406      0F
 1407 0197 0D030107 		.ascii	"\015\003\001\007\005;9?=3175+)/-#!'%[Y_]SQWUKIOMCAG"
 1407      053B393F 
 1407      3D333137 
 1407      352B292F 
 1407      2D232127 
 1408 01bb 457B797F 		.ascii	"E{y\177}sqwukiomcage\233\231\237\235\223\221\227\225"
 1408      7D737177 
 1408      756B696F 
 1408      6D636167 
 1408      659B999F 
 1409 01d4 8B898F8D 		.ascii	"\213\211\217\215\203\201\207\205\273\271\277\275\263"
 1409      83818785 
 1409      BBB9BFBD 
 1409      B3
 1410 01e1 B1B7B5AB 		.ascii	"\261\267\265\253\251\257\255\243\241\247\245\333\331"
 1410      A9AFADA3 
 1410      A1A7A5DB 
 1410      D9
 1411 01ee DFDDD3D1 		.ascii	"\337\335\323\321\327\325\313\311\317\315\303\301\307"
 1411      D7D5CBC9 
 1411      CFCDC3C1 
 1411      C7
 1412 01fb C5FBF9FF 		.ascii	"\305\373\371\377\375\363\361\367\365\353\351\357\355"
 1412      FDF3F1F7 
 1412      F5EBE9EF 
 1412      ED
 1413 0208 E3E1E7E5 		.ascii	"\343\341\347\345"
 1416              	SBox:
 1417 020c 637C777B 		.ascii	"c|w{\362ko\3050\001g+\376\327\253v\312\202\311}\372"
 1417      F26B6FC5 
 1417      3001672B 
 1417      FED7AB76 
 1417      CA82C97D 
 1418 0221 5947F0AD 		.ascii	"YG\360\255\324\242\257\234\244r\300\267\375\223&6?\367"
 1418      D4A2AF9C 
 1418      A472C0B7 
 1418      FD932636 
 1418      3FF7
 1419 0233 CC34A5E5 		.ascii	"\3144\245\345\361q\3301\025\004\307#\303\030\226\005"
 1419      F171D831 
 1419      1504C723 
 1419      C3189605 
 1420 0243 9A071280 		.ascii	"\232\007\022\200\342\353'\262u\011\203,\032\033nZ\240"
 1420      E2EB27B2 
 1420      7509832C 
 1420      1A1B6E5A 
 1420      A0
 1421 0254 523BD6B3 		.ascii	"R;\326\263)\343/\204S\321\000\355 \374\261[j\313\276"
 1421      29E32F84 
 1421      53D100ED 
 1421      20FCB15B 
 1421      6ACBBE
 1422 0267 394A4C58 		.ascii	"9JLX\317\320\357\252\373CM3\205E\371\002\177P<\237\250"
 1422      CFD0EFAA 
 1422      FB434D33 
 1422      8545F902 
 1422      7F503C9F 
 1423 027c 51A3408F 		.ascii	"Q\243@\217\222\2358\365\274\266\332!\020\377\363\322"
 1423      929D38F5 
 1423      BCB6DA21 
 1423      10FFF3D2 
 1424 028c CD0C13EC 		.ascii	"\315\014\023\354_\227D\027\304\247~=d]\031s`\201O\334"
 1424      5F974417 
 1424      C4A77E3D 
 1424      645D1973 
 1424      60814FDC 
 1425 02a0 222A9088 		.ascii	"\"*\220\210F\356\270\024\336^\013\333\3402:\012I\006"
 1425      46EEB814 
 1425      DE5E0BDB 
 1425      E0323A0A 
 1425      4906
 1426 02b2 245CC2D3 		.ascii	"$\\\302\323\254b\221\225\344y\347\3107m\215\325N\251"
 1426      AC629195 
 1426      E479E7C8 
 1426      376D8DD5 
 1426      4EA9
 1427 02c4 6C56F4EA 		.ascii	"lV\364\352ez\256\010\272x%.\034\246\264\306\350\335"
 1427      657AAE08 
 1427      BA78252E 
 1427      1CA6B4C6 
 1427      E8DD
 1428 02d6 741F4BBD 		.ascii	"t\037K\275\213\212p>\265fH\003\366\016a5W\271\206\301"
 1428      8B8A703E 
 1428      B5664803 
 1428      F60E6135 
 1428      57B986C1 
 1429 02ea 1D9EE1F8 		.ascii	"\035\236\341\370\230\021i\331\216\224\233\036\207\351"
 1429      981169D9 
 1429      8E949B1E 
 1429      87E9
 1430 02f8 CE5528DF 		.ascii	"\316U(\337\214\241\211\015\277\346BhA\231-\017\260T"
 1430      8CA1890D 
 1430      BFE64268 
 1430      41992D0F 
 1430      B054
 1431 030a BB16     		.ascii	"\273\026"
 1432              		.text
 1433              	.Letext0:
 1434              		.file 2 "AES_128.h"
 1435              		.file 3 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 AES_128.c
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:16     .text.ExpandKey:00000000 $t
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:25     .text.ExpandKey:00000000 ExpandKey
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:333    .text.ExpandKey:0000012c $d
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:1416   .rodata:0000020c SBox
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:340    .text.AddRoundKey:00000000 $t
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:348    .text.AddRoundKey:00000000 AddRoundKey
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:524    .text.AddMatrices:00000000 $t
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:532    .text.AddMatrices:00000000 AddMatrices
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:715    .text.SubBytes:00000000 $t
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:723    .text.SubBytes:00000000 SubBytes
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:899    .text.SubBytes:00000064 $d
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:904    .text.ShiftRows:00000000 $t
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:912    .text.ShiftRows:00000000 ShiftRows
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:996    .text.MixColumns:00000000 $t
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:1004   .text.MixColumns:00000000 MixColumns
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:1360   .text.MixColumns:00000200 $d
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:1380   .rodata:0000000c xTime3
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:1398   .rodata:0000010c xTime2
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:1375   .rodata:00000000 RCon
C:\Users\alexb\AppData\Local\Temp\ccfOe5Ke.s:1371   .rodata:00000000 $d

UNDEFINED SYMBOLS
memcpy
